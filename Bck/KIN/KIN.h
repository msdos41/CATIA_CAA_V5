// COPYRIGHT Dassault Systemes 2013
//===================================================================
//
// TestCmd.h
// The state chart based command: TestCmd
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//CAA2 Wizard Generation Report
//   STATECOMMAND
//End CAA2 Wizard Generation Report
//
//  May 2013  Creation: Code generated by the CAA wizard  Administrator
//===================================================================
#ifndef TestCmd_H
#define TestCmd_H




#include "CATStateCommand.h"
#include "CATBoolean.h"
#include "TestDlg.h"

//ApplicationFrame 
#include "CATFrmEditor.h"

//MechanicalModelerUI
#include "CATFeatureImportAgent.h"

//ObjectSpecsModeler
#include "CATISpecObject.h"

//Visualization
#include "CATHSO.h"

//MecModInterfaces
#include "CATIPrtContainer.h"
#include "CATIGSMTool.h"
#include "RailDlg.h"
#include "HingeDlg.h"
#include "RotateDlg.h"
#include "RotateHingeDlg.h"
#include "CATDlgFile.h"
#include "BodyDlg.h"
#include "DoorDlg.h"
#include "SweepPrtDlg.h"
#include "CATNavigation2DViewer.h"
#include "CAT2DImagePixelRep.h"
#include "CATListPtrCATISpecObject.h"
#include "CATIProduct.h"


#include "CATBody.h"
#include "CATFace.h"
#include "CATVolume.h"
#include "CATEdge.h"
#include "CATIBRepAccess.h"
#include "CATISpecAttrAccess.h"
#include "CATIKinMechanism.h"
#include "CATListPtrCATIProduct.h"


#include "SMCSpotWeldMethod.h"
//----------------------------------------------------------------------
enum SJDContainerType
{
	CGMContainer = 1,		//CGM对象Contianer
	SpecContainer = 2,		//特征对象Container
	ProductContainer = 3,	//Product对象Container
	BRepContainer = 4		//BRep对象Container
};
/**
 * Describe your command here.
 * <p>
 * Using this prefered syntax will enable mkdoc to document your class.
 * <p>
 * refer to programming resources of Dialog engine framework.
 * (consult base class description).
 */
class TestCmd: public CATStateCommand
{
  // Allows customization/internationalization of command's messages
  // ---------------------------------------------------------------
  DeclareResource( TestCmd, CATStateCommand )

  public:

  TestCmd();
  virtual ~TestCmd();

  virtual void     BuildGraph();

  //void TestCmdOK(CATCommand *cmd, CATNotification *evt, CATCommandClientData data);
  void TestCmdCANCEL(CATCommand *cmd, CATNotification *evt, CATCommandClientData data);

  virtual CATStatusChangeRC Activate( CATCommand*  iFromClient,CATNotification*  iNotification);

	CATBoolean  _isFirstActive;
	CATBoolean  _isFirstReplay;
	CATUnicodeString CgrFilePath;
	CATUnicodeString ExcelFileDirectory;

	CATIProduct_var spFixedProduct;

	CATListValCATUnicodeString ListOfMechInvoPrd;

  CATBoolean ChoosePoint(void * date);
  CATBoolean SelectSecSelectList(void * date);

  CATIPrtContainer_var GetPrtContainer();
  CATIGSMTool_var CreateGSMTool(const CATUnicodeString& iName,CATIPrtContainer_var iFeatCont);
  CATBody_var GetBodyFromFeature(const CATISpecObject_var& ispFeature);
  HRESULT GetDistanceBetweenProductsAtPosition(CATIProduct_var ispProduct1,CATIProduct_var ispProduct2,
	  double& oMinimalDistance,CATMathPoint & oPointonProduct1,CATMathPoint & oPointonProduct2);


  double GetMinDistance(CATISpecObject_var spiFirstOb,CATISpecObject_var spiSecOb,CATIProduct_var ispProduct1,CATIProduct_var ispProduct2);
  HRESULT CAAGsiRemove ( CATISpecObject_var SpecToRemove);

  HRESULT ObjectUpdate(const CATISpecObject_var& ispSpec);
  HRESULT InsertInProceduralView(const CATISpecObject_var& ispObjectToAppend, const CATISpecObject_var& ispInputParent);

  void get_xyz(double x1,double y1,double z1,
	  double x2,double y2,double z2,
	  double x3,double y3,double z3,
	  double x4,double y4,double z4,
	  double &x,double &y,double &z);
  CATIPrtContainer_var GetConFromInstancePrd(CATIProduct * InstancePrd);


  CATBoolean IsEndPt(CATVertex * VtToTest,CATEdge *EdgeContainVt, CATBody_var BodyContainEd );
  void GetPtNeighborEdgeCells( CATVertex * icell ,CATBody_var BodyToFindIn,CATLISTP(CATCell)&  oResult);
  void GetNeighborFace(CATFace * iTheFaceBody,CATBody_var BodyContainFace,CATLISTP(CATCell)&  oResultFace);
  CATMathVector EvalTangentVec(CATVertex *EndPt,CATEdge *EdgeContainPt);

  HRESULT SMCCopyPasteSpecObject(CATISpecObject_var ispiSpecOnChild,CATISpecObject_var ispiSpecOnNewFather,CATISpecObject_var &ospiSpecOnNew,CATBoolean iLink);
  HRESULT SJDCutPasteSpecObject(CATISpecObject_var ispiSpecOnChild,CATISpecObject_var ispiSpecOnNewFather);
  CATISpecObject_var CopyWithLinkOnBRep(CATIProduct_var spPrdSrc, CATIBRepAccess_var spBrepSrc, CATIProduct_var spPrdTgt, CATISpecObject_var spSpecTgt, CATBoolean bLink);
  void UpdateProduct(CATIProduct * iProduct);

  void CalRunningEle(CATISpecObject_var ispSpecRotate,CATIProduct *InstancePrdOnRotate,CATIProduct *InstancePrdOnRail,CATISpecObject_var ispSpecRailSurface,CATISpecObject_var spiRollingSpcOnRail,CATISpecObject_var& ospRotateCenter,CATISpecObject_var& ospRunningEle,CATBoolean CurveOrSur=1);
  HRESULT SJDFaceDirectionIsInnerVolum(CATFace_var ispFace,CATVolume_var ispVolume,CATBoolean &oResult);
  HRESULT CopyAndPast(CATISpecObject_var iSourObject,CATIContainer_var ispTargetContainer);
  HRESULT GetContainerOfPartDoc(CATDocument *ipDocument,SJDContainerType iConType,CATIContainer_var &ospiContainer);
  HRESULT CopyGeoObjectFromOneContainerToAnotherContainer(CATLISTP(CATCell) &ioListCell,CATGeoFactory *ipTargetGeoFactory);


  CATFace * GetNextFace(CATFace * &ioStartFace,CATEdge * &ioConnectEdge,CATVertex * &ioConnectPt,CATBody_var BodyContainFace);
  void HideSpecObj(CATISpecObject_var ispSObject);

  //CATBoolean IsLastEdgeInFace(CATVertex * VtToTest,CATEdge *EdgeContainVt, CATBody_var BodyContainEd );

  HRESULT SJDOutputInheritanceStructure(CATISpecObject_var ispiSpecOnObject);

  HRESULT SJDOutputSpecObjectAllAttributes(CATISpecObject_var ispiSpecObject);
  CATUnicodeString SJDChangeAttributeTypeToString(CATAttrKind iAttType);
  CATUnicodeString SJDChangeAttributeQualityToString(CATAttrInOut iAttQuality);
  CATUnicodeString SJDGetAttributeListValue(CATISpecAttrAccess_var ispiAttrAccess,CATISpecAttrKey_var ispiAttrKey);

  void CreatePointCurveJoint(CATISpecObject_var spPoint,CATIProduct * piInstanceProdOnPoint,CATISpecObject_var spCurve,CATIProduct * piInstanceProdOnCurve,CATBoolean WeatherMiddleRail);

  void CreatePointSurfaceJoint(CATISpecObject_var spPoint,CATIProduct * piInstanceProdOnPoint,CATISpecObject_var spSurface,CATIProduct * piInstanceProdOnSurface);

  void CreateRigidJoint(CATIProduct_var spPrd1,CATIProduct_var spPrd2);

  void CreateRevoluteJoint(CATISpecObject_var spLine1,CATISpecObject_var spLine2,CATISpecObject_var spPlane1,CATIBRepAccess_var spiBRepHinge1Plane1,CATISpecObject_var spLastFeaOnPlane1,CATISpecObject_var spLastFeaOnPlane2,CATIProduct_var spPrd1,CATIProduct_var spPrd2);

  virtual void OnPushButton195PushBActivateNotification (CATCommand *, CATNotification* , CATCommandClientData data);

  virtual void OnPushButton196PushBActivateNotification (CATCommand *, CATNotification* , CATCommandClientData data);

  virtual void OnPushButton192PushBActivateNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 virtual void OnTabContainer068TabSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);
 
  virtual void OnPushButton187PushBActivateNotification (CATCommand *, CATNotification* , CATCommandClientData data);
  
  virtual void OnPushButton144PushBActivateNotification (CATCommand *, CATNotification* , CATCommandClientData data);
  virtual void OnPushButton140PushBActivateNotification (CATCommand *, CATNotification* , CATCommandClientData data);
 
  virtual void OnPushButton139PushBActivateNotification (CATCommand *, CATNotification* , CATCommandClientData data);
 
  virtual void OnPushButton166PushBActivateNotification (CATCommand *, CATNotification* , CATCommandClientData data);
 
  virtual void OnPushButton137PushBActivateNotification (CATCommand *, CATNotification* , CATCommandClientData data);
 
  virtual void OnPushButton136PushBActivateNotification (CATCommand *, CATNotification* , CATCommandClientData data);
  //
  virtual void OnPushButton135PushBActivateNotification (CATCommand *, CATNotification* , CATCommandClientData data);
 
  virtual void OnTestDlgDiaOKNotification (CATCommand *, CATNotification* , CATCommandClientData data);

  virtual void OnTestDlgDiaCANCELNotification ();
 
  virtual void OnTestDlgDiaCLOSENotification (CATCommand *, CATNotification* , CATCommandClientData data);
 
  virtual void OnSelectorList171ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);

  virtual void OnPushButton133PushBActivateNotification (CATCommand *, CATNotification* , CATCommandClientData data);

  virtual void OnSelectorList159ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);//参考零件

  virtual void OnCombo132ComboSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);//上三下一选择框

  //错误信息
  void RDCDMUBFErrorMsgBox(const char* pMsg, CATDialog* pParent=NULL);
  //提示信息
  void RDCDMUBFInformationMsgBox(const char* pMsg, CATDialog* pParent=NULL);







//raildlg


 void OnRailDlgDiaCLOSENotification (CATCommand *, CATNotification* , CATCommandClientData data);

 void OnRailDlgDiaOKNotification (CATCommand *, CATNotification* , CATCommandClientData data);

	void OnRailDlgDiaCANCELNotification (void * date);
	void OnRailDlgDiaCANCELNotification1 (void * date);
	void OnRailDlgDiaCANCELNotification2 (void * date);

 void OnRailSelectorList009ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 void OnRailSelectorList008ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 void OnRailSelectorList007ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 void OnRailSelectorList011ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 void OnRailSelectorList017ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 CATBoolean ChooseUpRailSurface(void * date);
 CATBoolean ChooseMdRailSurface(void * date);
 CATBoolean ChooseDwRailSurface(void * date);

 CATBoolean ChooseMdBearSurface(void * date);
 CATBoolean ChooseDwBearSurface(void * date);




//hinge
 virtual void OnHingeDlgDiaCANCELNotification (CATCommand *, CATNotification* , CATCommandClientData data);
 virtual void OnHingeDlgDiaCloseNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 virtual void OnHingeDlgDiaOKNotification (CATCommand *, CATNotification* , CATCommandClientData data);


 virtual void OnHingeSelectorList006ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);
 virtual void OnHingeSelectorList012ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);
 virtual void OnHingeSelectorList014ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);
 virtual void OnHingeSelectorList016ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 virtual void OnHingeSelectorList007ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);
 virtual void OnHingeSelectorList018ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);
 virtual void OnHingeSelectorList020ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);
 virtual void OnHingeSelectorList022ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 CATBoolean ChooseHinge1Line1(void * date);
 CATBoolean ChooseHinge1Line2(void * date);
 CATBoolean ChooseHinge1Plane1(void * date);
 CATBoolean ChooseHinge1Plane2(void * date);

 CATBoolean ChooseHinge2Line1(void * date);
 CATBoolean ChooseHinge2Line2(void * date);
 CATBoolean ChooseHinge2Plane1(void * date);
 CATBoolean ChooseHinge2Plane2(void * date);

 CATBoolean Plane1IsNormalToHinge1Line1(void * date);


 CATBoolean Plane1IsInSamePrdHinge1Line1(void * date);
 CATBoolean Plane2IsInSamePrdHinge1Line2(void * date);
 CATBoolean Plane1IsInSamePrdHinge2Line1(void * date);
 CATBoolean Plane2IsInSamePrdHinge2Line2(void * date);

CATMathVector DirOnPreHinge1Line1;
CATBoolean Plane2IsNormalToHinge1Line1(void * date);

CATBoolean Plane1IsNormalToHinge2Line1(void * date);

CATMathVector DirOnPreHinge2Line1;
CATBoolean Plane2IsNormalToHinge2Line1(void * date);


//Rotate
 virtual void OnRotateDlgDiaCANCELNotification (CATCommand *, CATNotification* , CATCommandClientData data);
 virtual void OnRotateDlgDiaCloseNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 virtual void OnRotateDlgDiaOKNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 virtual void OnRotateSelectorList008ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 virtual void OnRotateSelectorList007ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 virtual void OnRotateSelectorList006ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 virtual void OnRotateSelectorList012ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 virtual void OnRotateSelectorList014ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 virtual void OnSelectorListMdRot2ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 virtual void OnSelectorListDnRot2ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 CATBoolean ChooseUpRotateSurface(void * date);
 CATBoolean ChooseMdRotateSurface(void * date);
 CATBoolean ChooseDwRotateSurface(void * date);

 CATBoolean ChooseMdDirRotateSurface(void * date);
 CATBoolean ChooseMdDirRotateSurface2(void * date);

 CATBoolean ChooseDwDirRotateSurface(void * date);
 CATBoolean ChooseDwDirRotateSurface2(void * date);

 //body
 //virtual void OnBodyDlgDiaCLOSENotification (CATCommand *, CATNotification* , CATCommandClientData data);

 virtual void OnBodyDlgDiaOKNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 virtual void OnBodyDlgDiaCANCELNotification (CATCommand *, CATNotification* , CATCommandClientData data);
 virtual void OnBodyDlgDiaCloseNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 virtual void OnBodySelectorList007ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 virtual void OnBodySelectorList006ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 CATBoolean ChooseBody(void * date);
 CATBoolean ChooseBodyPart(void * date);
 CATBoolean ClearOneBodyPrd(void * date);

//door

 //virtual void OnDoorDlgDiaCLOSENotification (CATCommand *, CATNotification* , CATCommandClientData data);

 virtual void OnDoorDlgDiaOKNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 virtual void OnDoorDlgDiaCANCELNotification (CATCommand *, CATNotification* , CATCommandClientData data);
 virtual void OnDoorDlgDiaCloseNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 virtual void OnDoorSelectorList006ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 virtual void OnDoorSelectorList005ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);


 //swept part
 virtual void OnSweepPrtDlgDiaCANCELNotification (CATCommand *, CATNotification* , CATCommandClientData data);
 virtual void OnSweepPrtDlgDiCloseNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 virtual void OnSweepPrtDlgDiaOKNotification (CATCommand *, CATNotification* , CATCommandClientData data);
 CATBoolean ChooseSwetpPart(void * date);
 virtual void OnSelectorList002ListSelectNotification (CATCommand *, CATNotification* , CATCommandClientData data);

 virtual void OnPushButton186PushBActivateNotification (CATCommand *, CATNotification* , CATCommandClientData data);


 CATBoolean ChooseRefPart(void * date);


 CATBoolean ChooseDoor(void * date);
 CATBoolean ChooseDoorPart(void * date);
 CATBoolean ClearOneDoorPrd(void * date);

	 //viewer
	 CATNavigation2DViewer * GetViewer2D(int EleType);
	 CATNavigation2DViewer *_Viewer2DRail;
	 CATNavigation2DViewer *_Viewer2DHinge;
 	 CATNavigation2DViewer *_Viewer2DRotate;
	 CATNavigation2DViewer *_Viewer2DRotateHinge;
	 CATNavigation2DViewer *_Viewer2DBody;
	 CATNavigation2DViewer *_Viewer2DDoor;

	 CAT2DImagePixelRep *_pImageRep;



  private:


	  CATDlgFile                  *m_pFileSaver;
	  void ClickSaveOK(CATCommand         * iSendingCommand, 
	  CATNotification      * iSentNotification, 
	  CATCommandClientData   iUsefulData);

	  CATIKinMechanism* piMechanism;

	  CATIProduct_var spRootProduct;

	  CATFrmEditor          *      _editor;
		CATDocument* pDoc;
	  CATHSO                *      _HSO;
	  CATDialogAgent        *      _pPanelOKAgent;
	  CATDialogAgent        *      _pPanelCancelAgent;
	  CATDialogAgent        *      _pPanelCloseAgent;

	  CATDialogAgent        * _pHingeButtonAgent;
	  CATDialogAgent        * _pRailButtonAgent;
	  CATDialogAgent        * _pRotateButtonAgent;
  	  CATDialogAgent        *_pBodyButtonAgent;
	  CATDialogAgent        *_pDoorButtonAgent;
	  CATDialogAgent        * _pSweptButtonAgent;


	  CATDialogAgent        *      _pSweptOKAgent;
	  CATDialogAgent        *      _pSweptCancleAgent;
	  CATDialogAgent        *      _pSweptCloseAgent;
	  CATDialogAgent        *      _pSweptelListAgent;
	  CATPathElementAgent *      _pSwepTPartAgent;
	  CATLISTP(CATIProduct)  LISTProdOfSwepTPart;//计算包络体用的 这个得到的是所选product最上一层的节点
	  CATIProduct_var spSelPrdOnSweptPrd;



	  CATDialogAgent        *      _pRefListAgent;
	  CATPathElementAgent *      _pRefPartAgent;
	  CATPathElement * pRefPartPathSel;
	  CATIProduct_var spRefPrd;
	  CATISpecObject_var spLastFeaOnRefPrd;

	  CATDialogAgent        *      _pBodyOKAgent;
	  CATDialogAgent        *      _pBodyCancleAgent;
	  CATDialogAgent        *      _pBodyCloseAgent;



	  CATDialogAgent        *      _pBodyelLis1Agent;
	  CATDialogAgent        *      _pBodySelLis2Agent;//车身固联体列表
	  CATDialogAgent *	_pdaClearSeat1Select;

	  CATPathElementAgent *      _pBodyAgent;
	  CATPathElementAgent *      _pBodyPartAgent;


	  CATIProduct_var spBodyPrd;
	  CATLISTP(CATIProduct)  LISTProdOfBody;
	  //CATLISTP(CATISpecObject) lstBodyPartObjects;

	  CATIProduct_var spDoorPrd;
	  CATLISTP(CATIProduct)  LISTProdOfDoor;
	  //CATLISTP(CATISpecObject) lstDoorPartObjects;



	  CATDialogAgent        *      _pDoorOKAgent;
	  CATDialogAgent        *      _pDoorCancleAgent;
	  CATDialogAgent        *      _pDoorCloseAgent;

	  CATDialogAgent        *      _pDoorelLis1Agent;
	  CATDialogAgent        *      _pDoorSelLis2Agent;
	  CATPathElementAgent *      _pDoorAgent;
	  CATPathElementAgent *      _pDoorPartAgent;
	  CATDialogAgent *	_pdaClearSeat2Select;


	  CATLISTP(CATISpecObject) lstDoorPartObjects;


	  CATPathElementAgent *      _pUpRollingFaceAgent;
	  CATFeatureImportAgent *      _pMdRollingFaceAgent;
	  CATFeatureImportAgent *      _pDwRollingFaceAgent;
	  CATFeatureImportAgent *      _pMdBearFaceAgent;
	  CATFeatureImportAgent *      _pDwBearFaceAgent;
	  CATDialogAgent        *      _pRollingFaceCancleAgent;
	  CATDialogAgent        *      _pRollingFaceCloseAgent;
	  CATPathElement *pDownBearRollingFacePathSel;

	  CATDialogAgent        *      _pRollingFaceSelLis1Agent;
	  CATDialogAgent        *      _pRollingFaceSelLis2Agent;
	  CATDialogAgent        *      _pRollingFaceSelLis3Agent;
	  CATDialogAgent        *      _pRollingFaceSelLis4Agent;
	  CATDialogAgent        *      _pRollingFaceSelLis5Agent;
	  CATDialogAgent        *      _pRollingFaceOKAgent;

	  CATPathElement       *        pUpRollingFacePathSel;
	  CATIProduct          *        piInstanceProdOnUpRollingFace;
	  CATISpecObject_var           spiUpRollingSpcSurface;
	  CATISpecObject_var           spiUpRollingSpcOnRail;


	  CATPathElement       *        pMidRollingFacePathSel;
	  CATIProduct          *        piInstanceProdOnMidRollingFace;
	  CATISpecObject_var           spiMidRollingSpcSurface;
	  CATISpecObject_var           spiMidRollingSpcOnRail;


	  CATIProduct          *        piInstanceProdOnDownRollingFace;
	  CATISpecObject_var           spiDownRollingSpcSurface;
	  CATISpecObject_var           spiDownRollingSpcOnRail;
	  CATPathElement * pDownRollingFacePathSel;

	  CATIProduct          *        piInstanceProdOnDownBearRollingFace;
	  CATISpecObject_var           spiDownBearRollingSpcSurface;
	  CATISpecObject_var           spiDownBearRollingSpcOnRail;




	  CATFeatureImportAgent *      _pHinge1Line1Agent;
	  CATFeatureImportAgent *      _pHinge1Line2Agent;
	  CATFeatureImportAgent *      _pHinge1Plane1Agent;
	  CATFeatureImportAgent *      _pHinge1Plane2Agent;

	  CATFeatureImportAgent *      _pHinge2Line1Agent;
	  CATFeatureImportAgent *      _pHinge2Line2Agent;
	  CATFeatureImportAgent *      _pHinge2Plane1Agent;
	  CATFeatureImportAgent *      _pHinge2Plane2Agent;
	  CATUnicodeString srtHinge1Line1Prd;
	  CATUnicodeString srtHinge1Line2Prd;
	  CATUnicodeString srtHinge2Line1Prd;
	  CATUnicodeString srtHinge2Line2Prd;



	  CATISpecObject_var            spiHinge1Line1;
	  CATPathElement       *        pHinge1Line1PathSel;
	  CATISpecObject_var            spiHinge1Plane1;
	  CATPathElement       *        pHinge1Plane1PathSel;
	  CATIProduct          *        piInstanceProdOnHinge1Plane1;
	  CATISpecObject_var            spLastFeaOnHinge1Plane1;

  	  CATIBRepAccess_var            spiBRepHinge1Plane1;
	  CATIBRepAccess_var            spiBRepHinge2Plane1;


	  CATISpecObject_var            spiHinge1Line2;
	  CATPathElement       *        pHinge1Line2PathSel;
	  CATISpecObject_var            spiHinge1Plane2;
	  CATPathElement       *        pHinge1Plane2PathSel;
	  CATIProduct          *        piInstanceProdOnHinge1Plane2;
	  CATISpecObject_var            spLastFeaOnHinge1Plane2;




	  CATISpecObject_var            spiHinge2Line1;
	  CATPathElement       *        pHinge2Line1PathSel;
	  CATISpecObject_var            spiHinge2Plane1;
	  CATPathElement       *        pHinge2Plane1PathSel;
	  CATIProduct          *        piInstanceProdOnHinge2Plane1;
	  CATISpecObject_var            spLastFeaOnHinge2Plane1;




	  CATISpecObject_var            spiHinge2Line2;
	  CATPathElement       *        pHinge2Line2PathSel;
	  CATISpecObject_var            spiHinge2Plane2;
	  CATPathElement       *        pHinge2Plane2PathSel;
	  CATIProduct          *        piInstanceProdOnHinge2Plane2;
	  CATISpecObject_var            spLastFeaOnHinge2Plane2;




	  CATDialogAgent        *		_pHingeFaceOKAgent;
	  CATDialogAgent        *		_pHingeFaceCancleAgent;
	  CATDialogAgent        *      _pHingeFaceCloseAgent;

	  CATDialogAgent        *      _pHinge1Line1SelLisAgent;
	  CATDialogAgent        *      _pHinge1Line2SelLisAgent;
	  CATDialogAgent        *      _pHinge1Plane1SelLisAgent;
	  CATDialogAgent        *      _pHinge1Plane2SelLisAgent;

	  CATDialogAgent        *      _pHinge2Line1SelLisAgent;
	  CATDialogAgent        *      _pHinge2Line2SelLisAgent;
	  CATDialogAgent        *      _pHinge2Plane1SelLisAgent;
	  CATDialogAgent        *      _pHinge2Plane2SelLisAgent;







	  CATFeatureImportAgent *      _pUpRotateFaceAgent;
	  CATFeatureImportAgent *      _pMdRotateFaceAgent;
	  CATFeatureImportAgent *      _pDwRotateFaceAgent;
	  CATFeatureImportAgent *      _pMdRotateDirFaceAgent;
	  CATFeatureImportAgent *      _pMdRotateDirFaceAgent2;

	  CATFeatureImportAgent *      _pDwRotateDirFaceAgent;
	  CATFeatureImportAgent *      _pDwRotateDirFaceAgent2;

	  CATDialogAgent        *      _pRotateFaceCancleAgent;
	  CATDialogAgent        *      _pRotateFaceSelLis1Agent;
	  CATDialogAgent        *      _pRotateFaceSelLis2Agent;
	  CATDialogAgent        *      _pRotateFaceSelLis3Agent;//_pMdRotateDirFacetState
	  CATDialogAgent        *      _pRotateFaceSelLis6Agent;
	  CATDialogAgent        *      _pRotateFaceSelLis7Agent;

	  CATDialogAgent        *      _pRotateFaceSelLis4Agent;

	  CATDialogAgent        *      _pRotateFaceSelLis5Agent;
	  CATDialogAgent        *      _pRotateFaceOKAgent;
	  CATDialogAgent        *      _pRotateFaceCloseAgent;

	  CATISpecObject_var           spiUpRotateSpcSurface;
	  CATPathElement       *        pUpRotateFacePathSel;
	  CATIProduct          *        piInstanceProdOnUpRotate;//目标面的product 用来做connecter的参数 上滚轮的
	  CATISpecObject_var           spiUpRotatCenter;


	  CATISpecObject_var           spiMidRotateSpcSurface1;
	  CATPathElement       *        pMidRotateFacePathSel1;
	  CATIProduct          *        piInstanceProdOnMidRotate1;
	  CATISpecObject_var           spiMidRotatCenter1;

	  CATISpecObject_var           spiMidRotateSpcSurface2;
	  CATPathElement       *        pMidRotateFacePathSel2;
	  //CATIProduct          *        piInstanceProdOnMidRotate1;
	  //CATISpecObject_var           spiMidRotatCenter2;


	  CATISpecObject_var           spiDownRotateSpcSurface1;
	  CATPathElement       *        pDownRotateFacePathSel1;
	  CATIProduct          *        piInstanceProdOnDownRotate1;
	  //CATISpecObject_var           spiDownRotatCenter1;

	  CATISpecObject_var           spiDownRotateSpcSurface2;
	  CATPathElement       *        pDownRotateFacePathSel2;


	  CATISpecObject_var           spiDownBearRotateSpcSurface;
	  CATPathElement       *        pDownBearRotateFacePathSel;



	  //CATISpecObject_var           spiSurface;
	  //CATISpecObject_var           spiPoint;

	  CATIGSMTool_var              spGsmTool;
	  TestDlg           *      _Panel;

	  RailDlg *_RailPanel;
	  HingeDlg *_HingePanel;
	  RotateDlg *_RotatePanel;
	  RotateHingeDlg *_RotateHingePanel;
	  BodyDlg *_BodyPanel;
	  DoorDlg *_DoorPanel;
	  SweepPrtDlg *_SweepPrtPanel;


	  CATBoolean             _IsMoreWindowOpen;
	  CATUnicodeString       _MoreMsg ;
	  CATUnicodeString       _LessMsg ;

	  	SMCSpotWeldMethod								* _pSMCSpotWeldMethod;

};

//----------------------------------------------------------------------

#endif
