// COPYRIGHT Dassault Systemes 2020
//===================================================================
//
// TstEFactory.cpp
// Provide implementation to interface
//    TstIFactory
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//  Apr 2020  Creation: Code generated by the CAA wizard  Administrator
//===================================================================
#include "TstEFactory.h"
 
CATImplementClass(TstEFactory,
                  DataExtension,
                  TstIFactory,
                  CATFeatCont );

//-----------------------------------------------------------------------------
// TstEFactory : constructor
//-----------------------------------------------------------------------------
TstEFactory::TstEFactory():
    TstIFactory()
{
}

//-----------------------------------------------------------------------------
// TstEFactory : destructor
//-----------------------------------------------------------------------------
TstEFactory::~TstEFactory()
{
}
 
// Link the implementation to its interface
// ---------------------------------------


//BOA definition
CATImplementBOA(TstIFactory,TstEFactory);

//TIE or TIEchain definitions


//Methods implementation

//-----------------------------------------------------------------------------
// Implements TstIFactory::CreateTstPoint
//-----------------------------------------------------------------------------
HRESULT TstEFactory::CreateTstPoint (double  iX , double  iY , double  iZ , TstIPoint ** oPT)
{
	//获取container
	CATIContainer_var spiSpecCont(this);
	if (NULL_var==spiSpecCont)
	{
		return E_FAIL;
	}
	//访问特征库
	CATICatalog *piCatalog=NULL;
	CATUnicodeString strCatalogStorageName="TestCatalog.CATfct";
	CATUnicodeString strClientId="TestFeatExtId";
	HRESULT rc = ::AccessCatalog(&strCatalogStorageName,&strClientId,spiSpecCont,&piCatalog);
	if (FAILED(rc)||piCatalog==NULL)
	{
		return E_FAIL;
	}
	//获取StartUp
	CATBaseUnknown *pBUStartup=NULL;
	CATUnicodeString strStartupType="TestExtendPT";
	rc = piCatalog->RetrieveSU(&pBUStartup,&strStartupType,"CATISpecObject");
	piCatalog->Release();
	piCatalog=NULL;
	if (FAILED(rc)||pBUStartup==NULL)
	{
		return E_FAIL;
	}
	CATISpecObject *piSpecOnStartup=NULL;
	rc = pBUStartup->QueryInterface(IID_CATISpecObject,(void**)&piSpecOnStartup);
	pBUStartup->Release();
	pBUStartup=NULL;
	if (FAILED(rc)||piSpecOnStartup==NULL)
	{
		return E_FAIL;
	}
	//创建特征实例
	CATISpecObject *piSpecInst=piSpecOnStartup->Instanciate(NULL_string,spiSpecCont);
	piSpecOnStartup->Release();
	piSpecOnStartup=NULL;
	if (piSpecInst==NULL)
	{
		return E_FAIL;
	}
	//设定特征实例的参数
	TstIPoint *piTstPoint=NULL;
	rc = piSpecInst->QueryInterface(IID_TstIPoint,(void**)&piTstPoint);
	piSpecInst->Release();
	piSpecInst=NULL;
	if (FAILED(rc)||piTstPoint==NULL)
	{
		return E_FAIL;
	}
	piTstPoint->SetX(iX);
	piTstPoint->SetY(iY);
	piTstPoint->SetZ(iZ);

	(*oPT)=piTstPoint;

    return S_OK;
}

