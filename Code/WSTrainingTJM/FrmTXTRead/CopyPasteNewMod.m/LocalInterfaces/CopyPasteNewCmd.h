// COPYRIGHT Dassault Systemes 2018
//===================================================================
//
// CopyPasteNewCmd.h
// The state chart based command: CopyPasteNewCmd
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//CAA2 Wizard Generation Report
//   STATECOMMAND
//End CAA2 Wizard Generation Report
//
//  Nov 2018  Creation: Code generated by the CAA wizard  Administrator
//===================================================================
#ifndef CopyPasteNewCmd_H
#define CopyPasteNewCmd_H

#include "CATStateCommand.h"
#include "CATBoolean.h"
#include "CATFeatureImportAgent.h"
#include "CATDialogAgent.h"
#include "CATFrmEditor.h"
#include "CATHSO.h"
#include "CATISpecObject.h"
#include "CopyPasteNewDlg.h"
#include "CATIBuildPath.h"
#include "CATLISTV_CATISpecObject.h"
#include "CATListOfCATUnicodeString.h"
#include "CATMmrInterPartCopy.h"







class CATIndicationAgent;

//----------------------------------------------------------------------

/**
 * Describe your command here.
 * <p>
 * Using this prefered syntax will enable mkdoc to document your class.
 * <p>
 * refer to programming resources of Dialog engine framework.
 * (consult base class description).
 */
class CopyPasteNewCmd: public CATStateCommand
{
  // Allows customization/internationalization of command's messages
  // ---------------------------------------------------------------
  DeclareResource( CopyPasteNewCmd, CATStateCommand )

  public:

  CopyPasteNewCmd();
  virtual ~CopyPasteNewCmd();

    /**
     * Defines the command automata.
     * <br>
     * <i>(states, transitions and agents)</i>
     */
  virtual void     BuildGraph();

    /**
     * Action associated to state transitions.
     */
  virtual CATBoolean  ActionOne(void * data);
  void ExitCmd(void * data);
  void ActionOK(void * data);
  CATBoolean SelectCopyElem(void * data);
  CATBoolean SelectPasteDesti(void * data);
  //CATBoolean SelectCopyDlgAgent(void * data);
  void SelectCopyDlgAgent(void * data);
  CATBoolean SelectPasteDlgAgent(void * data);
  void SetActiveDlgAgent(CATISpecObject *spSpecOnDlgAgent);
  void SelectElement(CATFeatureImportAgent *pFeatAgent,CATISpecObject *&piSpecOnELement);
  void SelectBatchElements(CATFeatureImportAgent *pFeatAgent, CATListValCATISpecObject_var &lstSpecOnElements);
private:

  CATIndicationAgent	* _Indication;

  CATFeatureImportAgent * _pCopyElemAgent;
  CATFeatureImportAgent * _pPasteDestiAgent;

  CATDialogAgent * _pCopyElemDlgAgent;
  CATDialogAgent * _pPasteDestiDlgAgent;

  CATISpecObject * _piSpecOnCopyElem;
  CATISpecObject * _piSpecOnPasteDesti;

  CATFrmEditor * _pEditor;

  CATHSO * _pHSO;

  CopyPasteNewDlg * _pDlg;

  CATListValCATISpecObject_var _lstSpecOnBatchElements;

  CATListValCATUnicodeString  _lstAliasOnSelection;

};

//----------------------------------------------------------------------

#endif
