// COPYRIGHT Dassault Systemes 2018
//===================================================================
//
// CreatePadCmd.h
// The state chart based command: CreatePadCmd
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//CAA2 Wizard Generation Report
//   STATECOMMAND
//End CAA2 Wizard Generation Report
//
//  Dec 2018  Creation: Code generated by the CAA wizard  Administrator
//===================================================================
#ifndef CreatePadCmd_H
#define CreatePadCmd_H

#include "CATStateCommand.h"
#include "CATBoolean.h"
#include "CreatePadDlg.h"

#include "CATIPrtFactory.h"
#include "CATISketchFactory.h"
#include "CATICkeParmFactory.h"
#include "CATFrmEditor.h"
#include "CATDocument.h"
#include "CATIDocRoots.h"
#include "CATLISTV_CATBaseUnknown.h"
#include "CATIProduct.h"
#include "CATListOfCATUnicodeString.h"

#include "CATILinkableObject.h"
#include "CATIContainerOfDocument.h"
#include "CATIContainer.h"
#include "CATIPrtPart.h"
#include "CATInit.h"
#include "CATIPrtContainer.h"

#include "CATISketch.h"
#include "CATI2DWFFactory.h"
#include "CATI2DPoint.h"
#include "CATI2DLine.h"
#include "CATI2DCircle.h"
#include "CATMathDirection.h"
#include "CATI2DConstraintFactory.h"
#include "CATI2DAxis.h"

class CATIndicationAgent;

//----------------------------------------------------------------------

/**
 * Describe your command here.
 * <p>
 * Using this prefered syntax will enable mkdoc to document your class.
 * <p>
 * refer to programming resources of Dialog engine framework.
 * (consult base class description).
 */
class CreatePadCmd: public CATStateCommand
{
  // Allows customization/internationalization of command's messages
  // ---------------------------------------------------------------
  DeclareResource( CreatePadCmd, CATStateCommand )

  public:

  CreatePadCmd();
  virtual ~CreatePadCmd();

    /**
     * Defines the command automata.
     * <br>
     * <i>(states, transitions and agents)</i>
     */
  virtual void     BuildGraph();

    /**
     * Action associated to state transitions.
     */
  virtual CATBoolean  ActionOne(void * data);

  void ExitCmd(void * data);

  void ActionOK(void * data);

  HRESULT GetCurrentPartInformation(CATIPrtFactory_var &spPrtFactory, CATISketchFactory_var &spSketchFactory, CATICkeParmFactory_var &spParmFactory);

  HRESULT GetDatumPlanes(CATISpecObject_var spSpecObjPart,CATISpecObject_var &spSpecPlaneXOY,CATISpecObject_var &spSpecPlaneYOZ,CATISpecObject_var &spSpecPlaneXOZ);

  void GetCurrentObject(CATISpecObject_var &spSpecObjPart);

private:

  CATIndicationAgent	* _Indication;

  CreatePadDlg * _pDlg;
};

//----------------------------------------------------------------------

#endif
