// COPYRIGHT Dassault Systemes 2019
//===================================================================
//
// ProductConstraintsCmd.h
// The state chart based command: ProductConstraintsCmd
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//CAA2 Wizard Generation Report
//   STATECOMMAND
//End CAA2 Wizard Generation Report
//
//  Jan 2019  Creation: Code generated by the CAA wizard  Administrator
//===================================================================
#ifndef ProductConstraintsCmd_H
#define ProductConstraintsCmd_H

#include "CATStateCommand.h"
#include "CATBoolean.h"
#include "ProductConstraintsDlg.h"

#include "iostream.h"

#include "CATFrmEditor.h"
#include "CATDocument.h"
#include "CATIDocRoots.h"
#include "CATLISTV_CATBaseUnknown.h"
#include "CATIProduct.h"
#include "CATIDocId.h"

#include "CATICst.h"
#include "CATConstraintServices.h"
#include "CATCstDefs.h"

#include "CATAsmConnectorServices.h"
#include "CATAsmConstraintServices.h"

#include "CATFeatureImportAgent.h"
#include "CATDialogAgent.h"
#include "CATBaseUnknown.h"
#include "CATPathElement.h"
#include "CATISpecObject.h"
#include "CATIAlias.h"

#include "CATIBRepAccess.h"
#include "CATIFeaturize.h"
#include "CATHSO.h"
#include "CATIBuildPath.h"

#include "CATGetEnvValue.h"
#include "CATDocumentServices.h"
#include "CATIAProducts.h"
#include "CATIADocument.h"
#include "CATIAProduct.h"

#include "CATIModelEvents.h"
#include "CATModify.h"
#include "CATIRedrawEvent.h"

#include "CATIPrdObjectPublisher.h"

class CATIndicationAgent;

//----------------------------------------------------------------------

/**
 * Describe your command here.
 * <p>
 * Using this prefered syntax will enable mkdoc to document your class.
 * <p>
 * refer to programming resources of Dialog engine framework.
 * (consult base class description).
 */
class ProductConstraintsCmd: public CATStateCommand
{
  // Allows customization/internationalization of command's messages
  // ---------------------------------------------------------------
  DeclareResource( ProductConstraintsCmd, CATStateCommand )

  public:

  ProductConstraintsCmd();
  virtual ~ProductConstraintsCmd();

    /**
     * Defines the command automata.
     * <br>
     * <i>(states, transitions and agents)</i>
     */
  virtual void     BuildGraph();

    /**
     * Action associated to state transitions.
     */
  virtual CATBoolean  ActionOne(void * data);

  void ExitCmd(void * data);

  void ActionOK(void * data);

  HRESULT GetRootProduct(CATIProduct *&opiRootProduct);

  void ActionSelectLine();

  void ActionSelectFace();

  void SwitchToFaceSelect();

  void SwitchToLineSelect();

  void SelectElement(CATFeatureImportAgent *pFeatAgent,CATISpecObject_var &spSpecOnSelection);

  HRESULT GetSelectAgtValue(CATFeatureImportAgent * pSelectAgent, CATISpecObject_var &spSpecObj);

  void SetHighlight(CATFeatureImportAgent *ipFeatImpAgt);

  void ActionHightlightLine();

  void ActionHightlightFace();

  void SetHighlightUpdate(CATISpecObject_var ispSpecSelect);

  HRESULT GetResourseFile(CATUnicodeString &CATEnvPath,CATUnicodeString FileFullName,CATUnicodeString folderName);

  HRESULT Import (const CATIProduct_var& ihProductTarget, const CATUnicodeString& strPath, CATIProduct *& oProduct);

  HRESULT RedrawSpecTree(CATIProduct_var& iNodeProd);

  HRESULT GetPublications(CATIProduct_var ispProduct, CATISpecObject_var &ospLine, CATISpecObject_var &ospFace);

  //HRESULT ConstraintCoincidence(CATIProduct_var ispProductTarget, CATISpecObject_var ispSpecElem1, CATISpecObject_var ispSpecElem2);
  //HRESULT ConstraintCoincidence(CATISpecObject_var ispSpecElem1, CATISpecObject_var ispSpecElem2);
  HRESULT ConstraintCoincidence(CATIProduct_var ispFatherProduct, CATIProduct_var ispProduct1 ,CATISpecObject_var ispSpecElem1, CATIProduct_var ispProduct2, CATISpecObject_var ispSpecElem2);
  //HRESULT GetRootFatherProduct(CATISpecObject_var ispSpecElem, CATIProduct_var ospRootFatherProduct);
  HRESULT GetRootFatherProduct(CATISpecObject_var ispSpecElem, CATIProduct_var &ospRootFatherProduct);

  HRESULT GetRootFatherProductFromPathElement(CATFeatureImportAgent *ipFeatImpAgent, CATIProduct_var &ospiRootFatherProduct);

  void SelectElementUpdate(CATFeatureImportAgent *pFeatAgent,CATISpecObject_var &spSpecOnSelection, CATIProduct_var &ospProductSeletion);

  HRESULT ConstraintFix(CATIProduct_var ispiFatherProduct, CATIProduct_var ispiProductFix);

private:

  CATIndicationAgent	* _Indication;

  ProductConstraintsDlg * _pDlg;

  CATFeatureImportAgent * _pFeaImpAgtLine;

  CATFeatureImportAgent * _pFeaImpAgtFace;

  CATDialogAgent * _pDlgAgtLine;

  CATDialogAgent * _pDlgAgtFace;

  CATISpecObject_var _spSpecLine;

  CATISpecObject_var _spSpecFace;

  CATFrmEditor * _pEditor;

  CATHSO * _pHSO;

  CATIProduct_var _spiProductLine;

  CATIProduct_var _spiProductFace;
};

//----------------------------------------------------------------------

#endif
