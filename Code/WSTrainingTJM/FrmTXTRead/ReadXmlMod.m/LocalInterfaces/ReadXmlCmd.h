// COPYRIGHT Dassault Systemes 2018
//===================================================================
//
// ReadXmlCmd.h
// The state chart based command: ReadXmlCmd
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//CAA2 Wizard Generation Report
//   STATECOMMAND
//End CAA2 Wizard Generation Report
//
//  Dec 2018  Creation: Code generated by the CAA wizard  Administrator
//===================================================================
#ifndef ReadXmlCmd_H
#define ReadXmlCmd_H

#include "CATStateCommand.h"
#include "CATBoolean.h"
#include "ReadXmlDlg.h"

#include "CATGetEnvValue.h"
#include "iostream.h"

#include "CATIXMLDOMDocumentBuilder.h"
#include "CATIXMLSAXFactory.h"
#include "CATIDOMDocument.h"

#include "CATIDOMElement.h"
#include "CATIDOMNodeList.h"
#include "CATListOfCATUnicodeString.h"
#include "CATIDOMNamedNodeMap.h"
#include "CATIDOMAttr.h"

#include "CATFrmEditor.h"
#include "CATDocument.h"
#include "CATIDocRoots.h"
#include "CATLISTV_CATBaseUnknown.h"
#include "CATIProduct.h"
#include "CATIDocId.h"

#include "CATIContainerOfDocument.h"
#include "CATIPrtContainer.h"
#include "CATIPrtPart.h"
#include "CATIDescendants.h"

#include "CATListOfCATUnicodeString.h"

#include "CATListPtrCATIProduct.h"
#include "CATIAttributesDescription.h"
#include "CATIInstance.h"
#include "CATAttributeInfos.h"
#include "CATIDOMImplementation.h"
#include "CATIDOMDocumentType.h"

#include <ctime>
#include <stdio.h>

class CATIndicationAgent;

//----------------------------------------------------------------------

/**
 * Describe your command here.
 * <p>
 * Using this prefered syntax will enable mkdoc to document your class.
 * <p>
 * refer to programming resources of Dialog engine framework.
 * (consult base class description).
 */
class ReadXmlCmd: public CATStateCommand
{
  // Allows customization/internationalization of command's messages
  // ---------------------------------------------------------------
  DeclareResource( ReadXmlCmd, CATStateCommand )

  public:

  ReadXmlCmd();
  virtual ~ReadXmlCmd();

    /**
     * Defines the command automata.
     * <br>
     * <i>(states, transitions and agents)</i>
     */
  virtual void     BuildGraph();

    /**
     * Action associated to state transitions.
     */
  virtual CATBoolean  ActionOne(void * data);

  HRESULT GetResourseFile(CATUnicodeString &CATEnvPath,CATUnicodeString FileFullName,CATUnicodeString folderName);

  void ExitCmd(void * data);

  void ActionOK(void * data);

  HRESULT OpenXML(CATUnicodeString istrXMLPath,CATIDOMDocument_var &ospDOMDocument);

  HRESULT ReadXMLUpdate(CATUnicodeString strFileName, CATUnicodeString strFolderName);

  HRESULT ReadXMLUpdate(CATUnicodeString strFileName, CATUnicodeString strFolderName, CATListValCATUnicodeString &lstTags, CATListValCATUnicodeString &lstAttrbutes, CATListValCATUnicodeString &lstTexts);

  void ReadXml(void * data);

  void SelectDirectory(void * data);

  void FileWindowExitCmd(void * data);

  void ShowSavePath(void * data);

  HRESULT GetRootProduct(CATIProduct *&opiRootProduct);

  void GetAllSubParts(CATIProduct *ipiRootProduct, CATLISTP(CATIProduct) &lstSubParts);

  CATBoolean IsProduct(CATIProduct_var ispiPrd);

  HRESULT GetProperties(CATIProduct *ipiProduct, CATListValCATUnicodeString &lstNames, CATListValCATUnicodeString &lstValues);

  void WriteXml(void * data);

  HRESULT WriteNewXMLupdate(CATUnicodeString strPath, CATLISTP(CATIProduct) ilstProducts);

  void GetCurrentTimeAndDate(CATUnicodeString &strDate, CATUnicodeString &strTime);

  private:

  CATIndicationAgent	* _Indication;

  ReadXmlDlg * _pDlg;

  CATDlgFile * _pFileWindow;

  CATUnicodeString _strSavePath;

  CATListValCATUnicodeString _lstPropertyKeyWords;
};

//----------------------------------------------------------------------

#endif
