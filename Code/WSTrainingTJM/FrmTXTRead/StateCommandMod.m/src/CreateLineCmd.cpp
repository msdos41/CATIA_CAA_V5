// COPYRIGHT Dassault Systemes 2018
//===================================================================
//
// CreateLineCmd.cpp
// The state chart based command: CreateLineCmd
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Nov 2018  Creation: Code generated by the CAA wizard  Administrator
//===================================================================
#include "CreateLineCmd.h"
#include "CATIndicationAgent.h"
#include "CATMathPlane.h"

#include "CATCreateExternalObject.h"
CATCreateClass( CreateLineCmd);

#include "CATFeatureImportAgent.h"
#include "CATDialogAgent.h"
#include "CATISpecObject.h"
#include "CATIAlias.h"


//-------------------------------------------------------------------------
// Constructor
//-------------------------------------------------------------------------
CreateLineCmd::CreateLineCmd() :
  CATStateCommand ("CreateLineCmd", CATDlgEngOneShot, CATCommandModeExclusive) 
//  Valid states are CATDlgEngOneShot and CATDlgEngRepeat
  ,_Indication(NULL)
{
	_pDlg = NULL;
	_pDlg = new CreateLineDlg();
	_pDlg->SetFather(this);
	_pDlg->Build();
	_pDlg->SetVisibility(CATDlgShow);

	_pFeatAgtFirstPt = NULL;
	_pFeatAgtSecondPt = NULL;
	_pDiaAgentFirst = NULL;
	_pDiaAgentSecond = NULL;
}

//-------------------------------------------------------------------------
// Destructor
//-------------------------------------------------------------------------
CreateLineCmd::~CreateLineCmd()
{
   if (_Indication != NULL) 
      _Indication->RequestDelayedDestruction();

   if (_pDlg != NULL)
   {
	   _pDlg->RequestDelayedDestruction();
	   _pDlg = NULL;
   }

	if (_pFeatAgtFirstPt != NULL)
	{
		_pFeatAgtFirstPt->RequestDelayedDestruction();
		_pFeatAgtFirstPt = NULL;
	}

	if (_pFeatAgtSecondPt != NULL)
	{
		_pFeatAgtSecondPt->RequestDelayedDestruction();
		_pFeatAgtSecondPt = NULL;
	}

	if (_pDiaAgentFirst != NULL)
	{
		_pDiaAgentFirst->RequestDelayedDestruction();
		_pDiaAgentFirst = NULL;
	}

	if (_pDiaAgentSecond != NULL)
	{
		_pDiaAgentSecond->RequestDelayedDestruction();
		_pDiaAgentSecond = NULL;
	}
}


//-------------------------------------------------------------------------
// BuildGraph()
//-------------------------------------------------------------------------
void CreateLineCmd::BuildGraph()
{


  // TODO: Define the StateChart 
  // ---------------------------
  _Indication = new CATIndicationAgent ("Indication");
  CATMathPlane PlaneXY;
  _Indication -> SetMathPlane (PlaneXY);
  CATDialogState * initialState = GetInitialState("initialState");
  initialState -> AddDialogAgent (_Indication);
  
  AddTransition( initialState, NULL, 
                 IsOutputSetCondition (_Indication),
                 Action ((ActionMethod) &CreateLineCmd::ActionOne));

	//这3段以后可以复制	
  
    AddAnalyseNotificationCB(_pDlg,
		_pDlg->GetWindCloseNotification(),
		(CATCommandMethod)&CreateLineCmd::ExitCmd,
		NULL);

	AddAnalyseNotificationCB(_pDlg,
		_pDlg->GetDiaCANCELNotification(),
		(CATCommandMethod)&CreateLineCmd::ExitCmd,
		NULL);

	AddAnalyseNotificationCB(_pDlg,
		_pDlg->GetDiaOKNotification(),
		(CATCommandMethod)&CreateLineCmd::ActionOK,
		NULL);

	//选择对象
	_pFeatAgtFirstPt = new CATFeatureImportAgent("Select First Point");
	CATLISTV(CATString) typeList = NULL;
	  //过滤所要选择的对象类型
	typeList.Append("CATIMfZeroDimResult");//点
	//typeList.Append("CATIMfMonoDimResult");//曲线
	//typeList.Append("CATIMfBiDimResult");//曲面
	_pFeatAgtFirstPt->SetOrderedTypeList(typeList);
	_pFeatAgtFirstPt->SetBehavior(CATDlgEngWithPrevaluation|CATDlgEngWithPSOHSO|CATDlgEngWithTooltip|CATDlgEngOneShot);

	_pFeatAgtSecondPt = new CATFeatureImportAgent("Select Second Point");
	_pFeatAgtSecondPt->SetOrderedTypeList(typeList);
	_pFeatAgtSecondPt->SetBehavior(CATDlgEngWithPrevaluation|CATDlgEngWithPSOHSO|CATDlgEngWithTooltip|CATDlgEngOneShot);

	//窗体对象
	_pDiaAgentFirst = new CATDialogAgent("First Point");
	_pDiaAgentFirst->AcceptOnNotify(_pDlg->GetCATDlgSelectorListFirstPoint(),
		_pDlg->GetCATDlgSelectorListFirstPoint()->GetListSelectNotification());

	_pDiaAgentSecond = new CATDialogAgent("Second Point");
	_pDiaAgentSecond->AcceptOnNotify(_pDlg->GetCATDlgSelectorListSecondPoint(),
		_pDlg->GetCATDlgSelectorListSecondPoint()->GetListSelectNotification());

	//定义状态
	CATDialogState * pDlgStatSelFirstPt = GetInitialState("Select First Point");
	pDlgStatSelFirstPt->AddDialogAgent(_pFeatAgtFirstPt);
	pDlgStatSelFirstPt->AddDialogAgent(_pDiaAgentFirst);
	pDlgStatSelFirstPt->AddDialogAgent(_pDiaAgentSecond);

	CATDialogState * pDlgStatSelSecondPt = AddDialogState("Select Second Point");
	pDlgStatSelSecondPt->AddDialogAgent(_pFeatAgtSecondPt);
	pDlgStatSelSecondPt->AddDialogAgent(_pDiaAgentFirst);
	pDlgStatSelSecondPt->AddDialogAgent(_pDiaAgentSecond);

	//状态转换
	AddTransition(pDlgStatSelFirstPt,pDlgStatSelFirstPt,IsOutputSetCondition(_pFeatAgtFirstPt),
		Action((ActionMethod)&CreateLineCmd::SelectFirstPoint));

	AddTransition(pDlgStatSelFirstPt,pDlgStatSelSecondPt,IsOutputSetCondition(_pDiaAgentSecond),
		Action((ActionMethod)&CreateLineCmd::Transform_SelSecondPoint));

	AddTransition(pDlgStatSelSecondPt,pDlgStatSelSecondPt,IsOutputSetCondition(_pFeatAgtSecondPt),
		Action((ActionMethod)&CreateLineCmd::SelectSecondPoint));

	AddTransition(pDlgStatSelSecondPt,pDlgStatSelFirstPt,IsOutputSetCondition(_pDiaAgentFirst),
		Action((ActionMethod)&CreateLineCmd::Transform_SelFirstPoint));


}


//-------------------------------------------------------------------------
// ActionOne ()
//-------------------------------------------------------------------------
CATBoolean CreateLineCmd::ActionOne( void *data )
{
  // TODO: Define the action associated with the transition 
  // ------------------------------------------------------

  return TRUE;
}

void CreateLineCmd::ExitCmd(void * data)
{
	this->RequestDelayedDestruction();
}

void CreateLineCmd::ActionOK(void * data)
{
	return;
}

HRESULT CreateLineCmd::GetSelectAgtValue(CATFeatureImportAgent * pSelectAgent,
										 CATISpecObject_var &spSpecObj)
{
	HRESULT rc = E_FAIL;
	spSpecObj = pSelectAgent->GetElementValue();
	pSelectAgent->InitializeAcquisition();
	if (NULL_var == spSpecObj)
	{
		rc = E_FAIL;
	}
	else
	{
		rc = S_OK;
	}
	return rc;
}

void CreateLineCmd::SelectFirstPoint()
{
	CATISpecObject_var spSpecObj = NULL_var;
	GetSelectAgtValue(_pFeatAgtFirstPt,spSpecObj);
	if (spSpecObj == NULL_var)
	{
		return;
	}
	_spSpecFirstPt = spSpecObj;

	CATIAlias_var spAlias = spSpecObj;
	CATUnicodeString strName = "";
	if (spAlias != NULL_var)
	{
		strName = spAlias->GetAlias();
	}
	_pDlg->GetCATDlgSelectorListFirstPoint()->ClearLine();
	_pDlg->GetCATDlgSelectorListFirstPoint()->SetLine(strName);

	int iTabRow = 0;
	if (_spSpecSecondPt == NULL_var)
	{
		_pDlg->GetCATDlgSelectorListSecondPoint()->SetSelect(&iTabRow,1,1);
	}
	_pFeatAgtFirstPt->InitializeAcquisition();
}

void CreateLineCmd::SelectSecondPoint()
{
	CATISpecObject_var spSpecObj = NULL_var;
	GetSelectAgtValue(_pFeatAgtSecondPt,spSpecObj);
	if (spSpecObj == NULL_var)
	{
		return;
	}
	_spSpecSecondPt = spSpecObj;

	CATIAlias_var spAlias = spSpecObj;
	CATUnicodeString strName = "";
	if (spAlias != NULL_var)
	{
		strName = spAlias->GetAlias();
	}

	_pDlg->GetCATDlgSelectorListSecondPoint()->ClearLine();
	_pDlg->GetCATDlgSelectorListSecondPoint()->SetLine(strName);

	int iTabRow = 0;
	if (_spSpecFirstPt == NULL_var)
	{
		_pDlg->GetCATDlgSelectorListFirstPoint()->SetSelect(&iTabRow,1,1);
	}
	_pFeatAgtSecondPt->InitializeAcquisition();
}

void CreateLineCmd::Transform_SelFirstPoint(void * data)
{
	_pDiaAgentFirst->InitializeAcquisition();
	_pDiaAgentSecond->InitializeAcquisition();
	_pDlg->GetCATDlgSelectorListSecondPoint()->ClearSelect();
}

void CreateLineCmd::Transform_SelSecondPoint(void * data)
{
	_pDiaAgentFirst->InitializeAcquisition();
	_pDiaAgentSecond->InitializeAcquisition();
	_pDlg->GetCATDlgSelectorListFirstPoint()->ClearSelect();
}
