// COPYRIGHT Dassault Systemes 2018
//===================================================================
//
// TXTReadCmd.cpp
// The dialog : TXTReadCmd
// It is a command.
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Nov 2018  Creation: Code generated by the CAA wizard  Administrator
//===================================================================
#include "TXTReadCmd.h"
#include "CATApplicationFrame.h"
#include "CATDlgGridConstraints.h"
#include "CATMsgCatalog.h"
#ifdef TXTReadCmd_ParameterEditorInclude
#include "CATIParameterEditorFactory.h"
#include "CATIParameterEditor.h"
#include "CATICkeParm.h"
#endif


#include "CATCreateExternalObject.h"
#include "CATFrmEditor.h"






CATCreateClass( TXTReadCmd);


//-------------------------------------------------------------------------
// Constructor
//-------------------------------------------------------------------------
TXTReadCmd::TXTReadCmd() :
  CATDlgDialog ((CATApplicationFrame::GetApplicationFrame())->GetMainWindow(),
//CAA2 WIZARD CONSTRUCTOR DECLARATION SECTION
"TXTReadCmd",CATDlgWndBtnClose|CATDlgWndTitleBarHelp|CATDlgGridLayout
//END CAA2 WIZARD CONSTRUCTOR DECLARATION SECTION
                               )
{
//CAA2 WIZARD CONSTRUCTOR INITIALIZATION SECTION
 _Container002 = NULL;
 _EditorDir = NULL;
 _Frame004 = NULL;
 _PushButtonReadTXT = NULL;
 _Frame008 = NULL;
 _PushButtonSelectFile = NULL;
 _SelectorListTXTContent = NULL;
 _Container010 = NULL;
 _Container011 = NULL;
//END CAA2 WIZARD CONSTRUCTOR INITIALIZATION SECTION
   m_FirstTime = 1;
//  Possible modes are: - CATCommandMsgRequestSharedMode
//                      - CATCommandMsgRequestExclusiveMode
//  -------------------------------------------------------
    RequestStatusChange (CATCommandMsgRequestExclusiveMode);
}

//-------------------------------------------------------------------------
// Destructor
//-------------------------------------------------------------------------
TXTReadCmd::~TXTReadCmd()
{
//  Do not delete the control elements of your dialog: 
//     this is done automatically
//  --------------------------------------------------
//CAA2 WIZARD DESTRUCTOR DECLARATION SECTION
 _Container002 = NULL;
 _EditorDir = NULL;
 _Frame004 = NULL;
 _PushButtonReadTXT = NULL;
 _Frame008 = NULL;
 _PushButtonSelectFile = NULL;
 _SelectorListTXTContent = NULL;
 _Container010 = NULL;
 _Container011 = NULL;
//END CAA2 WIZARD DESTRUCTOR DECLARATION SECTION
}


//  Overload this method: when your command gains focus
//
// Activates a command.
//   iFromClient :The command that requests to activate the current one.
//   iEvtDat :The notification sent.
// ----------------------------------------------------
CATStatusChangeRC TXTReadCmd::Activate( CATCommand * iFromClient, CATNotification * iEvtDat)
{
  if (m_FirstTime)
  {
     Build();
     m_FirstTime = 0;
  }
  SetVisibility(CATDlgShow);

  AddAnalyseNotificationCB(this,
	  this->GetDiaCLOSENotification(),
	  (CATCommandMethod)&TXTReadCmd::Cancel,
	  NULL);

  AddAnalyseNotificationCB(this,
	  this->GetWindCloseNotification(),
	  (CATCommandMethod)&TXTReadCmd::Cancel,
	  NULL);

  return (CATStatusChangeRCCompleted);
}

//  Overload this method: when your command loses focus
//
// Deactivates a command.
//   iFromClient :The command that requests to activate the current one.
//   iEvtDat :The notification sent.
// ----------------------------------------------------
CATStatusChangeRC TXTReadCmd::Desactivate( CATCommand * iFromClient, CATNotification * iEvtDat)
{
  SetVisibility (CATDlgHide);
  return (CATStatusChangeRCCompleted);
}

//  Overload this method: when your command is canceled
//
// Cancel a command.
//   iFromClient :The command that requests to activate the current one.
//   iEvtDat :The notification sent.
// ----------------------------------------------------
CATStatusChangeRC TXTReadCmd::Cancel( CATCommand * iFromClient, CATNotification * iEvtDat)
{
  SetVisibility (CATDlgHide);
  RequestDelayedDestruction();
  return (CATStatusChangeRCCompleted);
}


void TXTReadCmd::Build()
{
//  TODO: This call builds your dialog from the layout declaration file
//  -------------------------------------------------------------------

//CAA2 WIZARD WIDGET CONSTRUCTION SECTION
 _Container002 = new CATDlgContainer(this, "Container002");
 _Container002 -> SetRectDimensions(1, 1, 5, 10);
_Container002 -> SetGridConstraints(1, 1, 1, 1, CATGRID_4SIDES);
 _EditorDir = new CATDlgEditor(this, "EditorDir", CATDlgEdtReadOnly);
 _EditorDir -> SetVisibleTextWidth(30);
_EditorDir -> SetGridConstraints(1, 2, 1, 1, CATGRID_4SIDES);
 _Frame004 = new CATDlgFrame(this, "Frame004", CATDlgFraNoFrame|CATDlgGridLayout);
_Frame004 -> SetGridConstraints(2, 0, 1, 1, CATGRID_4SIDES);
 _PushButtonReadTXT = new CATDlgPushButton(_Frame004, "PushButtonReadTXT");
_PushButtonReadTXT -> SetGridConstraints(0, 0, 1, 1, CATGRID_4SIDES);
 _Frame008 = new CATDlgFrame(this, "Frame008", CATDlgFraNoFrame|CATDlgGridLayout);
_Frame008 -> SetGridConstraints(1, 0, 1, 1, CATGRID_4SIDES);
 _PushButtonSelectFile = new CATDlgPushButton(_Frame008, "PushButtonSelectFile");
_PushButtonSelectFile -> SetGridConstraints(0, 0, 1, 1, CATGRID_4SIDES);
 _SelectorListTXTContent = new CATDlgSelectorList(this, "SelectorListTXTContent");
_SelectorListTXTContent -> SetGridConstraints(2, 2, 1, 1, CATGRID_4SIDES);
 _Container010 = new CATDlgContainer(this, "Container010");
 _Container010 -> SetRectDimensions(1, 1, 5, 20);
_Container010 -> SetGridConstraints(0, 0, 1, 1, CATGRID_4SIDES);
 _Container011 = new CATDlgContainer(this, "Container011");
 _Container011 -> SetRectDimensions(1, 1, 5, 50);
_Container011 -> SetGridConstraints(0, 2, 1, 1, CATGRID_4SIDES);
//END CAA2 WIZARD WIDGET CONSTRUCTION SECTION

//CAA2 WIZARD CALLBACK DECLARATION SECTION
     AddAnalyseNotificationCB (_PushButtonReadTXT, 
                               _PushButtonReadTXT->GetPushBActivateNotification(),
                               (CATCommandMethod)&TXTReadCmd::OnPushButtonReadTXTPushBActivateNotification,
                               NULL);
     AddAnalyseNotificationCB (_PushButtonSelectFile, 
                               _PushButtonSelectFile->GetPushBActivateNotification(),
                               (CATCommandMethod)&TXTReadCmd::OnPushButtonSelectFilePushBActivateNotification,
                               NULL);
//END CAA2 WIZARD CALLBACK DECLARATION SECTION

}


//-------------------------------------------------------------------------
// Callback on PushBActivate of _PusAhButtonSelectFile
//-------------------------------------------------------------------------
void TXTReadCmd::OnPushButtonSelectFilePushBActivateNotification(CATCommand* cmd, CATNotification* evt, CATCommandClientData data)
{
  _pSelectFile = new CATDlgFile(this,"Select a TXT",CATDlgWndModal);
  _pSelectFile->SetVisibility(CATDlgShow);

  CATUnicodeString TypeDescription = "TXT Files";
  CATString TypeExtension = "*.txt";
  _pSelectFile->SetFilterStrings(&TypeDescription,&TypeExtension,1);

  AddAnalyseNotificationCB(_pSelectFile,
	  _pSelectFile->GetDiaOKNotification(),
	  (CATCommandMethod)&TXTReadCmd::OpenTXT,
	  NULL);
	// Add your code here
}

void TXTReadCmd::OpenTXT()
{
	_EditorDir->ClearLine();
	_fileName = "";
	_pSelectFile->GetSelection(_fileName);
	_EditorDir->SetText(_fileName);
	_pSelectFile->RequestDelayedDestruction();
	_pSelectFile = NULL;
	return;
}


//-------------------------------------------------------------------------
// Callback on PushBActivate of _PushButtonReadTXT
//-------------------------------------------------------------------------
void TXTReadCmd::OnPushButtonReadTXTPushBActivateNotification(CATCommand* cmd, CATNotification* evt, CATCommandClientData data)
{
  // Add your code here
	////读取txt方法一
	//_SelectorListTXTContent->ClearLine();

	//CATFrmEditor *pEditor = CATFrmEditor::GetCurrentEditor();
	//CATILinkableObject *pLinkableOnDoc = NULL;
	//HRESULT hr = pEditor->GetUIActiveObject().Search(IID_CATILinkableObject,(void**)&pLinkableOnDoc);
	//CATDocument *pDoc = pLinkableOnDoc->GetDocument();
	//CATIContainerOfDocument_var spiContOfDoc = pDoc;
	//CATIContainer *piContainerOnDoc = NULL;
	//hr = spiContOfDoc->GetSpecContainer(piContainerOnDoc);

	//CATICkeParmFactory_var spiParmFactory = piContainerOnDoc;

	//CATIDesignTable_var spiDesignTable = spiParmFactory->CreateDesignTable("Design Table","Design Table test",_fileName);

	//CATICkeSheet_var spiSheet = spiDesignTable->Sheet();

	//CATUnicodeString TxtContent;

	//for (int i =1; i <= spiSheet->Rows(); i++)
	//{
	//	for (int j = 1; j <= spiSheet->Columns(); j++)
	//	{
	//		TxtContent = spiSheet->Cell(i,j);
	//		_SelectorListTXTContent->SetLine(TxtContent,-1,CATDlgDataAdd);
	//	}
	//}


	//读取txt方法二，直接用C++的方法 

	_SelectorListTXTContent->ClearLine();
	ifstream input;
	input.open("c:\\test.txt");
	string strLine ;
	CATUnicodeString strUniLine;
	while (getline(input,strLine))
	{
		cout<<strLine<<endl;
		int iConvert = strUniLine.BuildFromWChar(txtConvert_Wchar(strLine));
		if (1 == iConvert)
		{
			_SelectorListTXTContent->SetLine(strUniLine,-1,CATDlgDataAdd);
		}
	}
	
}


//字符转换函数 
wchar_t *TXTReadCmd::txtConvert_Wchar(std::string str) 
{ 
	size_t size = str.length(); 
    wchar_t * buffer = new wchar_t[size + 1]; 
    MultiByteToWideChar(CP_ACP, 0, str.c_str(), size, buffer, size*sizeof(wchar_t)); 
    buffer[size] = 0; 
    return buffer; 
}

CATUnicodeString TXTReadCmd::CAAUStringBuildFromChar(char * strchar)
{
	int len = MultiByteToWideChar(CP_ACP, 0, strchar, -1, NULL, 0); 
	wchar_t* strwcANSI = new wchar_t[len + 1]; 
	memset(strwcANSI, 0, len * 2 + 2); 
	MultiByteToWideChar(CP_ACP, 0, strchar, -1, strwcANSI, len); 
	CATUnicodeString strwcUnicode;
	strwcUnicode.BuildFromWChar(strwcANSI); 
	if(strwcANSI) delete [] strwcANSI;
	return strwcUnicode;
}