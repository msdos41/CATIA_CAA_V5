// COPYRIGHT Dassault Systemes 2020
//===================================================================
//
// TestCATIAReferenceCmd.h
// The state chart based command: TestCATIAReferenceCmd
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//CAA2 Wizard Generation Report
//   STATECOMMAND
//End CAA2 Wizard Generation Report
//
//  Mar 2020  Creation: Code generated by the CAA wizard  Administrator
//===================================================================
#ifndef TestCATIAReferenceCmd_H
#define TestCATIAReferenceCmd_H

#include "CATStateCommand.h"
#include "CATBoolean.h"

#include "GeneralClass.h"
#include "TestCATIAReferenceDlg.h"

#include "CATIAProduct.h"
#include "CATIAPart.h"
#include "CATIAFactory.h"
#include "CATIAHybridShapeFactory.h"
#include "CATIAHybridShapeExtract.h"

class CATIndicationAgent;

//----------------------------------------------------------------------

/**
 * Describe your command here.
 * <p>
 * Using this prefered syntax will enable mkdoc to document your class.
 * <p>
 * refer to programming resources of Dialog engine framework.
 * (consult base class description).
 */
class TestCATIAReferenceCmd: public CATStateCommand
{
  // Allows customization/internationalization of command's messages
  // ---------------------------------------------------------------
  DeclareResource( TestCATIAReferenceCmd, CATStateCommand )

  public:

  TestCATIAReferenceCmd();
  virtual ~TestCATIAReferenceCmd();

    /**
     * Defines the command automata.
     * <br>
     * <i>(states, transitions and agents)</i>
     */
  virtual void     BuildGraph();

    /**
     * Action associated to state transitions.
     */
  virtual CATBoolean  ActionOne(void * data);
  CATBoolean ExitCmd(void * data);
  CATBoolean ActionHighlightFromBU(void * data);
  CATBoolean ActionHighlightFromSpecObj(void * data);
  void ActionSurfaceSelect(void * data);
  CATUnicodeString GetReferenceStringFromBU(CATBaseUnknown_var ispBU);
  CATUnicodeString GetReferenceStringFromSpecObj(CATISpecObject_var ispiSpecObj);
  CATBoolean AddHSO( CATBaseUnknown_var ispSpecSelect );
  CATISpecObject_var GetSpecFromBaseUnknownFunc(CATBaseUnknown* ipBUOfObject);
  CATUnicodeString GetReferenceStringFromSpecObjVBA(CATISpecObject_var ispiSpecObj);
  CATUnicodeString InsertStringsIntoString(CATUnicodeString istrBase,int iStep,CATUnicodeString istrInsert);
  HRESULT GetSpecFromReferenceVBA(CATIAPart_var ispiaPart,CATIAReference *ipiaRef,CATISpecObject_var &ospiSpecObj);
private:

	  TestCATIAReferenceDlg			*_pDlg;

	  GeneralClass				*_pGeneralCls;

	  CATFeatureImportAgent		*_pSurfaceAgent;

	  CATDialogAgent			*_pSurfaceFieldAgent;

	  CATUnicodeString			_strRefStringFromBU;

	  CATUnicodeString			_strRefStringFromSpecObj;

	  CATUnicodeString			_strRefStringFromSpecObjVBA;

	  CATIABase					*_piaBase;

	  CATBody_var				_spBody;



};

//----------------------------------------------------------------------

#endif
