// COPYRIGHT Dassault Systemes 2021
//===================================================================
//
// TestMechanismCmd.h
// The state chart based command: TestMechanismCmd
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//CAA2 Wizard Generation Report
//   STATECOMMAND
//End CAA2 Wizard Generation Report
//
//  Nov 2021  Creation: Code generated by the CAA wizard  Administrator
//===================================================================
#ifndef TestMechanismCmd_H
#define TestMechanismCmd_H

#include "CATStateCommand.h"
#include "CATBoolean.h"
#include "GeneralClass.h"
#include "TestMechanismDlg.h"

#include "CATIAMechanisms.h"
#include "CATIAMechanism.h"
#include "CATVisManager.h"
#include "CATIAApplication.h"
#include "CATIKinMechanism.h"

class CATIndicationAgent;

DWORD WINAPI CatchCATIAWindow(LPVOID);

//----------------------------------------------------------------------

/**
 * Describe your command here.
 * <p>
 * Using this prefered syntax will enable mkdoc to document your class.
 * <p>
 * refer to programming resources of Dialog engine framework.
 * (consult base class description).
 */
class TestMechanismCmd: public CATStateCommand
{
  // Allows customization/internationalization of command's messages
  // ---------------------------------------------------------------
  DeclareResource( TestMechanismCmd, CATStateCommand )

  public:

  TestMechanismCmd();
  virtual ~TestMechanismCmd();

    /**
     * Defines the command automata.
     * <br>
     * <i>(states, transitions and agents)</i>
     */
  virtual void     BuildGraph();

    /**
     * Action associated to state transitions.
     */
  virtual CATBoolean  ActionOne(void * data);
  HRESULT GetMechanisms(CATIProduct_var ispiProdRoot);
  HRESULT CreateImportedMechanism();
  CATBoolean ExitCmd(void * data);
  CATBoolean ActionOK(void * data);
  void ActionPressEnter();
  CATStatusChangeRC Activate( CATCommand * iFromClient, CATNotification * iEvtDat);
  CATStatusChangeRC Desactivate( CATCommand * iFromClient, CATNotification * iEvtDat);
  CATStatusChangeRC Cancel( CATCommand * iFromClient, CATNotification * iEvtDat);
  HRESULT SwitchWorkbench(CATUnicodeString istrWorkbench);
  //DWORD WINAPI CatchCATIAWindow(LPVOID);
private:

	  CATIProduct_var					_spiProdRoot;

	  GeneralClass						*_pGeneralCls;

	  TestMechanismDlg					*_pDlg;

	  int								_iClick;

};

//----------------------------------------------------------------------

#endif
