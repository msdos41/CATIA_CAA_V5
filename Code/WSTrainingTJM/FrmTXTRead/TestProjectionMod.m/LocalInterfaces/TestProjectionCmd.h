// COPYRIGHT Dassault Systemes 2019
//===================================================================
//
// TestProjectionCmd.h
// The state chart based command: TestProjectionCmd
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//CAA2 Wizard Generation Report
//   STATECOMMAND
//End CAA2 Wizard Generation Report
//
//  Mar 2019  Creation: Code generated by the CAA wizard  Administrator
//===================================================================
#ifndef TestProjectionCmd_H
#define TestProjectionCmd_H

#include "CATStateCommand.h"
#include "CATBoolean.h"

#include "TestProjectionDlg.h"
#include "CATFeatureImportAgent.h"
#include "CATDialogAgent.h"
#include "CATISpecObject.h"
#include "CATIProduct.h"

#include "CATPathElement.h"
#include "CATBaseUnknown.h"
#include "CATIBRepAccess.h"
#include "CATIFeaturize.h"
#include "CATIPrtPart.h"
#include "CATHSO.h"

#include "CATLine.h"
#include "CATMathLine.h"
#include "CATBody.h"
#include "CATCell.h"
#include "CATVertex.h"
#include "CATPoint.h"
#include "CATMathPoint.h"

#include "CATIGeometricalElement.h"
#include "CATIBodyRequest.h"
#include "CATIMfBRep.h"
#include "CATListOfCATCells.h"

#include "CATIMf3DAxisSystem.h"
#include "CATMathAxis.h"
#include "CATMathVector.h"

#include "CATIMovable.h"
#include "CATMathTransformation.h"
#include "CATIMeasurableSurface.h"
#include "CATFace.h"
#include "CATPlane.h"

#include "CATListPtrCATIProduct.h"
#include "CATIDocId.h"
#include "CATIContainerOfDocument.h"
#include "CATIDescendants.h"

#include "CATIBuildPath.h"

#include "CATIGSMFactory.h"
#include "CATICkeParmFactory.h"
#include "CATICkeParm.h"
#include "CATIGSMPointOnSurface.h"
#include "CATIGSMDirection.h"
#include "CATMfErrUpdate.h"

#include "CATAfrCommandHeaderServices.h"
#include "CATDlgNotify.h"
#include "CATApplicationFrame.h"
#include "CATFrmEditor.h"

#include "iostream.h"

#include "CATSoftwareConfiguration.h"
#include "CATCGMContainerMngt.h"
#include "CATCreateTopProject.h"
#include "CATHybProject.h"
#include "CATGeoFactory.h"
#include "CATDocument.h"
#include "CATIGSMExtractSolide.h"
#include "CATTopPointOperator.h"
#include "CATIMechanicalTool.h"


class CATIndicationAgent;

//----------------------------------------------------------------------

/**
 * Describe your command here.
 * <p>
 * Using this prefered syntax will enable mkdoc to document your class.
 * <p>
 * refer to programming resources of Dialog engine framework.
 * (consult base class description).
 */
class TestProjectionCmd: public CATStateCommand
{
  // Allows customization/internationalization of command's messages
  // ---------------------------------------------------------------
  DeclareResource( TestProjectionCmd, CATStateCommand )

  public:

  TestProjectionCmd();
  virtual ~TestProjectionCmd();

    /**
     * Defines the command automata.
     * <br>
     * <i>(states, transitions and agents)</i>
     */
  virtual void     BuildGraph();

    /**
     * Action associated to state transitions.
     */
  virtual CATBoolean  ActionOne(void * data);
  void ActionSelectPoint();
  void ActionSelectSolid();
  void SwitchToPointSelect();
  void SwitchToSolidSelect();
  void SelectElementUpdate(CATFeatureImportAgent *pFeatAgent,CATISpecObject_var &spSpecOnSelection, CATIProduct_var &ospProductSeletion);
  void SetHighlight(CATFeatureImportAgent *ipFeatImpAgt);
  void ActionCancel(void * data);
  void ActionOK(void * data);
  void ActionHighlightPoint();
  void ActionHighlightSolid();
  void SetHighlightUpdate(CATISpecObject_var ispSpecSelect);
  CATBody_var GetBodyFromFeature( CATBaseUnknown_var& ispFeature );

  HRESULT CreateProjection(CATISpecObject_var ispiSpecElement, CATISpecObject_var ispiSpecSupport);
  void GetGeoFactoryFromObject(CATISpecObject_var piCenterCurve,CATGeoFactory_var &ospGeoFactory);
  HRESULT CreateProjectionUpdate(CATISpecObject_var ispiSpecElement, CATISpecObject_var ispiSpecSupport);
  HRESULT CreateTopPointByXYZ(CATGeoFactory_var ispiGeoFactory,CATTopData iTopdata,CATMathPoint iMathPoint,CATBody_var &ospBodyPoint);
  CATMathPoint GetPointFromBody(CATBody_var spBody);
  CATPoint_var GetPoint(CATBaseUnknown_var ispiSpecObject);
  CATMathPoint GetMathPoint(CATBaseUnknown_var ispiSpecPoint);
  //HRESULT ActionCreateProjection(CATISpecObject_var ispiSpecElement, CATISpecObject_var ispiSpecSupport);
  HRESULT ActionCreateProjection(CATISpecObject_var ispiSpecElement, CATIProduct_var ispiProductElement, CATISpecObject_var ispiSpecSupport, CATIProduct_var ispiProductSupport);
  CATMathTransformation GetMatrixTransformation(CATIProduct_var ispCurrentProduct,CATIProduct_var ispTargetProduct);
private:

  CATIndicationAgent	* _Indication;

  TestProjectionDlg		* _pDlg;

  CATFrmEditor * _pEditor;

  CATHSO * _pHSO;

  CATFeatureImportAgent * _pPointAgent;

  CATFeatureImportAgent * _pSolidAgent;

  CATDialogAgent * _pPointFieldAgent;

  CATDialogAgent * _pSolidFieldAgent;

  CATISpecObject_var _spiSpecPoint;

  CATISpecObject_var _spiSpecSolid;

  CATIProduct_var	_spiProductPoint;

  CATIProduct_var	_spiProductSolid;
};

//----------------------------------------------------------------------

#endif
