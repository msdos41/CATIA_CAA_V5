// COPYRIGHT Dassault Systemes 2019
//===================================================================
//
// TestTempArrowCmd.cpp
// The state chart based command: TestTempArrowCmd
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  May 2019  Creation: Code generated by the CAA wizard  Administrator
//===================================================================
#include "TestTempArrowCmd.h"
#include "CATIndicationAgent.h"
#include "CATMathPlane.h"

#include "CATCreateExternalObject.h"


CATCreateClass( TestTempArrowCmd);


//-------------------------------------------------------------------------
// Constructor
//-------------------------------------------------------------------------
TestTempArrowCmd::TestTempArrowCmd() :
  CATStateCommand ("TestTempArrowCmd", CATDlgEngOneShot, CATCommandModeExclusive) 
//  Valid states are CATDlgEngOneShot and CATDlgEngRepeat
  ,_pFeaImpAgtLine(NULL) ,_pDlgAgtLine(NULL)
  ,_pGeneralClass(NULL)
{
	_pDlg = NULL;
	_pDlg = new TestTempArrowDlg();
	_pDlg->Build();
	_pDlg->SetVisibility(CATDlgShow);

	_pGeneralClass = new GeneralClass();

	_pISO = NULL;

	_pEditor = CATFrmEditor::GetCurrentEditor();
	_pHSO = NULL;
	if (NULL != _pEditor)
	{
		_pHSO = _pEditor->GetHSO();
		_pISO = _pEditor->GetISO();
	}
}

//-------------------------------------------------------------------------
// Destructor
//-------------------------------------------------------------------------
TestTempArrowCmd::~TestTempArrowCmd()
{
   if (_pDlg != NULL)
   {
	   _pDlg->RequestDelayedDestruction();
	   _pDlg = NULL;
   }

   if (_pFeaImpAgtLine != NULL)
   {
	   _pFeaImpAgtLine->RequestDelayedDestruction();
	   _pFeaImpAgtLine = NULL;
   }

   if (_pDlgAgtLine != NULL)
   {
	   _pDlgAgtLine->RequestDelayedDestruction();
	   _pDlgAgtLine = NULL;
   }

   _pISO->Empty();
   _pISO = NULL;

   _pEditor = NULL;

   _pHSO = NULL;

   if (_pGeneralClass != NULL)
   {
	   delete _pGeneralClass;
	   _pGeneralClass = NULL;
   }
}


//-------------------------------------------------------------------------
// BuildGraph()
//-------------------------------------------------------------------------
void TestTempArrowCmd::BuildGraph()
{
	//对话框
	AddAnalyseNotificationCB(_pDlg,
		_pDlg->GetDiaCLOSENotification(),
		(CATCommandMethod)&TestTempArrowCmd::ActionCancel,
		NULL);

	AddAnalyseNotificationCB(_pDlg,
		_pDlg->GetWindCloseNotification(),
		(CATCommandMethod)&TestTempArrowCmd::ActionCancel,
		NULL);

	AddAnalyseNotificationCB(_pDlg,
		_pDlg->GetDiaCANCELNotification(),
		(CATCommandMethod)&TestTempArrowCmd::ActionCancel,
		NULL);

	AddAnalyseNotificationCB(_pDlg,
		_pDlg->GetDiaOKNotification(),
		(CATCommandMethod)&TestTempArrowCmd::ActionOK,
		NULL);

	_pFeaImpAgtLine = new CATFeatureImportAgent("Select a Direction",NULL,NULL,MfNoDuplicateFeature);

	_pDlgAgtLine = new CATDialogAgent("Select Dialog Agent Line");

	_pFeaImpAgtLine->SetOrderedElementType("CATLine");

	_pFeaImpAgtLine->SetBehavior(CATDlgEngWithPrevaluation | CATDlgEngWithCSO     | CATDlgEngOneShot);
	_pFeaImpAgtLine->SetAgentBehavior(MfPermanentBody     | MfLastFeatureSupport      | MfRelimitedFeaturization   );

	_pDlgAgtLine->AcceptOnNotify(_pDlg->GetSelectorListDir(),_pDlg->GetSelectorListDir()->GetListSelectNotification());

	//临时元素箭头的选择
	_pSelectTempArrowAgent = new CATPathElementAgent("Select Temp Arrow");
	_pSelectTempArrowAgent->AddElementType(IID_CATI3DGeoVisu);
	_pSelectTempArrowAgent->SetBehavior(CATDlgEngWithPrevaluation|CATDlgEngWithCSO|CATDlgEngOneShot);	

	CATDialogState *pDlgStateLine = GetInitialState("Select a Direction");
	pDlgStateLine->AddDialogAgent(_pFeaImpAgtLine);
	pDlgStateLine->AddDialogAgent(_pDlgAgtLine);
	pDlgStateLine->AddDialogAgent(_pSelectTempArrowAgent);

	//CATDialogState *pDlgStateArrowTemp = AddDialogState("Click Direction");
	//pDlgStateArrowTemp->AddDialogAgent(_pSelectTempArrowAgent);
	//pDlgStateArrowTemp->AddDialogAgent(_pDlgAgtLine);

	AddTransition(pDlgStateLine,pDlgStateLine,
		IsOutputSetCondition(_pFeaImpAgtLine),
		Action((ActionMethod)& TestTempArrowCmd::ActionSelectDir));

	AddTransition(pDlgStateLine,pDlgStateLine,
		IsOutputSetCondition(_pSelectTempArrowAgent),
		Action((ActionMethod)& TestTempArrowCmd::ActionSelectArrowTemp));

}


//-------------------------------------------------------------------------
// ActionOne ()
//-------------------------------------------------------------------------
CATBoolean TestTempArrowCmd::ActionOne( void *data )
{
  // TODO: Define the action associated with the transition 
  // ------------------------------------------------------

  return TRUE;
}

void TestTempArrowCmd::ActionCancel(void * data)
{
	this->RequestDelayedDestruction();
}

void TestTempArrowCmd::ActionOK(void * data)
{
	CATModelForRep3D *pModelForRep3D = new CATModelForRep3D();
	//Get the CATISO
	if( !_pISO ) {
		CATFrmEditor *pEditor=CATFrmEditor::GetCurrentEditor();
		_pISO=pEditor->GetISO();
	}

	//Check the old CATRep is exist ?
	CATRep *pRepArrow=NULL;
	//rc = GetGraphicRepresentation(&pRepArrow);
	pRepArrow = pModelForRep3D->GiveRep();
	if( !!pRepArrow ) {  //The old one is exist.
		_pISO->RemoveElement(pModelForRep3D);
		_pISO->Empty();

		// 		pRepArrow->Destroy();
		// 		pRepArrow = NULL;
	}

	//Create a new one
	int lenAll=20;
	int lenHead=5;

	CAT3DCustomRep * pRepForArrow= new CAT3DCustomRep();

	CATGraphicAttributeSet attGP;
	//attGP.SetColor(HIGHLIGHT);
	attGP.SetColor(TRUECOLOR);
	attGP.SetColorRGBA(0,255,0,255);
	attGP.SetThickness(4);

	CATMathDirectionf dirArrow(0,0,1);
	CATMathPointf	originArrow(100,100,100);
	CAT3DFixedArrowGP  *pArrowGP = new CAT3DFixedArrowGP(originArrow,dirArrow,lenAll,lenHead);
	//if( !!_textArrow )
	//	pArrowGP->AssociateText(_textArrow);

	pRepForArrow->AddGP(pArrowGP,attGP);

	pModelForRep3D->SetRep(pRepForArrow);

	_pISO->AddElement(pModelForRep3D);
	return;
}

void TestTempArrowCmd::ActionSelectDir()
{
	//
	if (_pHSO != NULL)
	{
		_pHSO->Empty();
	}
	//
	if (_pISO != NULL)
	{
		_pISO->Empty();
	}
	//SelectElement(_pFeaImpAgtLine,_spSpecLine);
	CATBaseUnknown *pBUSelection = NULL;
	CATIProduct_var spiSelectionProduct = NULL_var;
	_pGeneralClass->TransferSelectToBU(_pFeaImpAgtLine,pBUSelection,spiSelectionProduct);
	////
	//CATIAlias_var spAlias = pBUSelection;
	//CATUnicodeString strAlias = "";
	//if (spAlias != NULL_var)
	//{
	//	strAlias = spAlias->GetAlias();
	//}
	//
	CATUnicodeString strPathSelect = "";
	_pGeneralClass->PathElementString(_pFeaImpAgtLine,strPathSelect);
	_pDlg->GetSelectorListDir()->ClearLine();
	_pDlg->GetSelectorListDir()->SetLine(strPathSelect,-1,CATDlgDataAdd);
	//
	_pGeneralClass->SetHighlight(_pFeaImpAgtLine,_pHSO);
	//
	_pFeaImpAgtLine->InitializeAcquisition();

	//从选择的线上获取端点
	CATMathPoint mathPoint1, mathPoint2;
	_pGeneralClass->GetPointFromCurve(pBUSelection,mathPoint1,mathPoint2);
	//获取中点作为箭头起点
	double dblCoordXmid = (mathPoint1.GetX()+mathPoint2.GetX())/2;
	double dblCoordYmid = (mathPoint1.GetY()+mathPoint2.GetY())/2;
	double dblCoordZmid = (mathPoint1.GetZ()+mathPoint2.GetZ())/2;
	CATMathPoint mathPointMid(dblCoordXmid,dblCoordYmid,dblCoordZmid);
	_mathPointArrowTempOrigin = mathPointMid;
	//获取向量作为箭头方向
	CATMathVector mathVector = mathPoint2 - mathPoint1;
	CATMathDirection mathDir(mathVector);
	_mathDirArrowTempDir = mathDir;
	//显示箭头
	ShowTempArrow(_pISO,_mathPointArrowTempOrigin,_mathDirArrowTempDir);

	return;
}

void TestTempArrowCmd::ActionSelectArrowTemp()
{
	//
	if (_pHSO != NULL)
	{
		_pHSO->Empty();
	}
	//
	if (_pISO != NULL)
	{
		_pISO->Empty();
	}
	//
	_mathDirArrowTempDir = -1 * _mathDirArrowTempDir;
	ShowTempArrow(_pISO,_mathPointArrowTempOrigin,_mathDirArrowTempDir);
	//
	_pSelectTempArrowAgent->InitializeAcquisition();
	return;
}

void TestTempArrowCmd::SwitchToArrowTemp()
{
	_pDlgAgtLine->InitializeAcquisition();
	_pDlg->GetSelectorListDir()->ClearSelect();
}

void TestTempArrowCmd::SwitchToSelectDir()
{
	_pSelectTempArrowAgent->InitializeAcquisition();
}

void TestTempArrowCmd::ShowTempArrow(CATISO *ipISO, CATMathPoint imathPointfOrigin, CATMathDirection imathDirf)
{
	CATModelForRep3D *pModelForRep3D = new CATModelForRep3D();
	//Get the CATISO
	if( !ipISO ) {
		CATFrmEditor *pEditor=CATFrmEditor::GetCurrentEditor();
		ipISO=pEditor->GetISO();
	}

	//Check the old CATRep is exist ?
	CATRep *pRepArrow=NULL;
	//rc = GetGraphicRepresentation(&pRepArrow);
	pRepArrow = pModelForRep3D->GiveRep();
	if( !!pRepArrow ) {  //The old one is exist.
		ipISO->RemoveElement(pModelForRep3D);
		ipISO->Empty();

		//pRepArrow->Destroy();
		//pRepArrow = NULL;
	}

	//Create a new one
	int lenAll=20;
	int lenHead=5;

	CAT3DCustomRep * pRepForArrow= new CAT3DCustomRep();

	CATGraphicAttributeSet attGP;
	//attGP.SetColor(HIGHLIGHT);
	attGP.SetColor(TRUECOLOR);
	attGP.SetColorRGBA(0,255,0,255);
	attGP.SetThickness(4);

	CATMathDirectionf dirArrow(imathDirf);
	CATMathPointf	originArrow(imathPointfOrigin);
	CAT3DFixedArrowGP  *pArrowGP = new CAT3DFixedArrowGP(originArrow,dirArrow,lenAll,lenHead);
	//if( !!_textArrow )
	//	pArrowGP->AssociateText(_textArrow);

	pRepForArrow->AddGP(pArrowGP,attGP);

	pModelForRep3D->SetRep(pRepForArrow);

	ipISO->AddElement(pModelForRep3D);
}