// COPYRIGHT Dassault Systemes 2019
//===================================================================
//
// TestTempPointCmd.h
// The state chart based command: TestTempPointCmd
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//CAA2 Wizard Generation Report
//   STATECOMMAND
//End CAA2 Wizard Generation Report
//
//  Nov 2019  Creation: Code generated by the CAA wizard  Administrator
//===================================================================
#ifndef TestTempPointCmd_H
#define TestTempPointCmd_H

#include "CATStateCommand.h"
#include "CATBoolean.h"

#include "TestTempPointDlg.h"
#include "GeneralClass.h"
#include "YFAirventViewerFeedbackManager.h"
#include "DumITempPoint.h"
#include "DumITempArrow.h"
#include "DumITempPlane.h"
#include "DumITempFace.h"

class CATIndicationAgent;

//----------------------------------------------------------------------

/**
 * Describe your command here.
 * <p>
 * Using this prefered syntax will enable mkdoc to document your class.
 * <p>
 * refer to programming resources of Dialog engine framework.
 * (consult base class description).
 */
class TestTempPointCmd: public CATStateCommand
{
  // Allows customization/internationalization of command's messages
  // ---------------------------------------------------------------
  DeclareResource( TestTempPointCmd, CATStateCommand )

  public:

  TestTempPointCmd();
  virtual ~TestTempPointCmd();

    /**
     * Defines the command automata.
     * <br>
     * <i>(states, transitions and agents)</i>
     */
  virtual void     BuildGraph();

    /**
     * Action associated to state transitions.
     */
  virtual CATBoolean  ActionOne(void * data);
  CATBoolean ExitCmd(void * data);
  void ActionSelect(void * data);
  HRESULT FindMechanicalToolFromPath(CATPathElement *ipPath);
  void TestHighLight();
  void ActionSelect2(void * data);
  void ActionSelectCurve(void * data);
  void ActionDragArrow(void * data);
  CATBoolean MoveArrow(CATCommand * iCommand,CATNotification * iNotification,CATCommandClientData iUsefulData);
  CATBoolean EndArrow(CATCommand * iCommand,CATNotification * iNotification,CATCommandClientData iUsefulData);
private:

	  TestTempPointDlg		*_pDlg;

	  GeneralClass			*_pGeneralCls;

	  CATISO				* _pISO;

	  CATHSO				* _pHSO;

	  CATFrmEditor			* _pEditor;

	  CATFeatureImportAgent	*_pSurfaceAgent;

	  CATDialogAgent		*_pSurfaceFieldAgent;

	  YFAirventViewerFeedbackManager	*_pViewerFeedbackManager;	//ÆÁÄ»²¶×½

	  CATLISTV(CATBaseUnknown_var)		_lstBUSurface;

	  CATLISTP(CATCell)					_lstCellSelect;

	  CATPathElementAgent				* _pSelectTempArrowAgent;

	  DumITempArrow						*_piTempArrow;

	  DumITempFace						*_piTempFace;

	  CATMathPoint						_moveEndPoint;

	  CATMathPoint						_moveEndPointExpand1;

	  CATMathVector						_moveEndDir;

	  CATLISTV(CATMathPoint)			_lstCornerPoints;

	  DumITempArrow						*_piTempArrowExpand1;

	  int								_intManipulateType;



};

//----------------------------------------------------------------------

#endif
