// COPYRIGHT Dassault Systemes 2020
//===================================================================
//
// TestToolingCmd.cpp
// The state chart based command: TestToolingCmd
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Jan 2020  Creation: Code generated by the CAA wizard  Administrator
//===================================================================
#include "TestToolingCmd.h"
#include "CATIndicationAgent.h"
#include "CATMathPlane.h"

#include "CATCreateExternalObject.h"
CATCreateClass( TestToolingCmd);


//-------------------------------------------------------------------------
// Constructor
//-------------------------------------------------------------------------
TestToolingCmd::TestToolingCmd() :
  CATStateCommand ("TestToolingCmd", CATDlgEngOneShot, CATCommandModeExclusive) 
//  Valid states are CATDlgEngOneShot and CATDlgEngRepeat
,_pSelAAgent(NULL),_pSelAFieldAgent(NULL)
,_pSelBAgent(NULL),_pSelBFieldAgent(NULL)
{
	_pDlg = NULL;
	_pDlg = new TestToolingDlg();
	_pDlg->Build();
	_pDlg->SetVisibility(CATDlgShow);
}

//-------------------------------------------------------------------------
// Destructor
//-------------------------------------------------------------------------
TestToolingCmd::~TestToolingCmd()
{
	if (_pDlg != NULL)
	{
		_pDlg->RequestDelayedDestruction();
		_pDlg = NULL;
	}

	if (_pSelAAgent != NULL)
	{
		_pSelAAgent->RequestDelayedDestruction();
		_pSelAAgent = NULL;
	}

	if (_pSelAFieldAgent != NULL)
	{
		_pSelAFieldAgent->RequestDelayedDestruction();
		_pSelAFieldAgent = NULL;
	}

	if (_pSelBAgent != NULL)
	{
		_pSelBAgent->RequestDelayedDestruction();
		_pSelBAgent = NULL;
	}

	if (_pSelBFieldAgent != NULL)
	{
		_pSelBFieldAgent->RequestDelayedDestruction();
		_pSelBFieldAgent = NULL;
	}
}


//-------------------------------------------------------------------------
// BuildGraph()
//-------------------------------------------------------------------------
void TestToolingCmd::BuildGraph()
{
	//对话框
	AddAnalyseNotificationCB(_pDlg,
		_pDlg->GetDiaCLOSENotification(),
		(CATCommandMethod)&TestToolingCmd::ActionCancel,
		NULL);

	AddAnalyseNotificationCB(_pDlg,
		_pDlg->GetWindCloseNotification(),
		(CATCommandMethod)&TestToolingCmd::ActionCancel,
		NULL);

	AddAnalyseNotificationCB(_pDlg,
		_pDlg->GetDiaCANCELNotification(),
		(CATCommandMethod)&TestToolingCmd::ActionCancel,
		NULL);

	AddAnalyseNotificationCB(_pDlg,
		_pDlg->GetDiaOKNotification(),
		(CATCommandMethod)&TestToolingCmd::ActionOK2,
		NULL);
	//PointField
	_pSelAFieldAgent = new CATDialogAgent("Select A");
	_pSelAFieldAgent->AcceptOnNotify(_pDlg->GetSelectorListLine(),
		_pDlg->GetSelectorListLine()->GetListSelectNotification());
	//SolidField
	_pSelBFieldAgent = new CATDialogAgent("Select B");
	_pSelBFieldAgent->AcceptOnNotify(_pDlg->GetSelectorListSurface(),
		_pDlg->GetSelectorListSurface()->GetListSelectNotification());
	//选择Point
	_pSelAAgent = new CATFeatureImportAgent("Select A");
	//_pPointAgent->AddElementType("CATIGSMPoint");
	_pSelAAgent->AddElementType("CATLine");
	_pSelAAgent->SetBehavior(CATDlgEngWithPrevaluation|CATDlgEngWithCSO|CATDlgEngOneShot);

	//选择Solid
	_pSelBAgent = new CATFeatureImportAgent("Select B");
	_pSelBAgent->AddElementType("CATSurface");
	//_pSolidAgent->AddElementType("CATSurface");
	//_pSolidAgent->AddElementType("CATIMechanicalTool");
	//_pSolidAgent->AddElementType("CATIMfBiDimResult");
	_pSelBAgent->SetBehavior(CATDlgEngWithPrevaluation|CATDlgEngWithCSO|CATDlgEngOneShot);

	//
	CATDialogState *pSelAState = GetInitialState("Select Line");
	pSelAState->AddDialogAgent(_pSelAAgent);
	pSelAState->AddDialogAgent(_pSelAFieldAgent);
	pSelAState->AddDialogAgent(_pSelBFieldAgent);

	CATDialogState *pSelBState = AddDialogState("Select Surface");
	pSelBState->AddDialogAgent(_pSelBAgent);
	pSelBState->AddDialogAgent(_pSelAFieldAgent);
	pSelBState->AddDialogAgent(_pSelBFieldAgent);

	//
	AddTransition(pSelAState,pSelAState,
		IsOutputSetCondition(_pSelAAgent),
		Action((ActionMethod)& TestToolingCmd::ActionSelectPoint));

	AddTransition(pSelBState,pSelBState,
		IsOutputSetCondition(_pSelBAgent),
		Action((ActionMethod)& TestToolingCmd::ActionSelectSolid));

	AddTransition(pSelAState,pSelBState,
		IsOutputSetCondition(_pSelBFieldAgent),
		Action((ActionMethod)& TestToolingCmd::SwitchToSolidSelect));

	AddTransition(pSelBState,pSelAState,
		IsOutputSetCondition(_pSelAFieldAgent),
		Action((ActionMethod)& TestToolingCmd::SwitchToPointSelect));

	////选中高亮
	//AddAnalyseNotificationCB(_pDlg->GetSelectorListPoint(),
	//	_pDlg->GetSelectorListPoint()->GetListSelectNotification(),
	//	(CATCommandMethod)&TestProjectionCmd::ActionHighlightPoint,
	//	NULL);

	//AddAnalyseNotificationCB(_pDlg->GetSelectorListSolid(),
	//	_pDlg->GetSelectorListSolid()->GetListSelectNotification(),
	//	(CATCommandMethod)&TestProjectionCmd::ActionHighlightSolid,
	//	NULL);
}


//-------------------------------------------------------------------------
// ActionOne ()
//-------------------------------------------------------------------------
CATBoolean TestToolingCmd::ActionOne( void *data )
{
  // TODO: Define the action associated with the transition 
  // ------------------------------------------------------

  return TRUE;
}
