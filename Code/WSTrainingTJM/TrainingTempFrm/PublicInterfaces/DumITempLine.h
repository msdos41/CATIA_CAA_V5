// COPYRIGHT Dassault Systemes 2015
//===================================================================
//
// DumITempLine.h
// Define the DumITempLine interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  May 2015  Creation: Code generated by the CAA wizard  Administrator
//===================================================================
#ifndef DumITempLine_H
#define DumITempLine_H

#include "TrainingTempM.h"
#include "CATBaseUnknown.h"
#include "CATMathPoint.h"
#include "CATRep.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByTrainingTempM IID IID_DumITempLine;
#else
extern "C" const IID IID_DumITempLine ;
#endif

//------------------------------------------------------------------

/**
* Interface representing xxx.
*
* <br><b>Role</b>: Components that implement
* DumITempLine are ...
* <p>
* Do not use the DumITempLine interface for such and such

*
* @example
*  // example is optional
*  DumITempLine* currentDisplay = NULL;
*  rc = window-&gt;QueryInterface(IID_DumITempLine,
*                                     (void**) &amp;currentDisplay);
*
* @href ClassReference, Class#MethodReference, #InternalMethod...
*/
class ExportedByTrainingTempM DumITempLine: public CATBaseUnknown
{
  CATDeclareInterface;

  public:
	  virtual HRESULT SetDatas(CATMathPoint *iFirstPoint,CATMathPoint *iSecondPoint, int iThichness = 4, int iRed = 0, int iGreen = 255, int iBlue = 0, int iLineType = 1) = 0;
	  virtual HRESULT SetGraphicRepresentation (CATRep *  iRep ) = 0;
	  virtual HRESULT GetGraphicRepresentation (CATRep **  oRep ) = 0;
	  virtual HRESULT SetColor (int iColor) = 0;

    /**
     * Remember that interfaces define only virtual pure methods.
     * Dont forget to document your methods.
     * <dl>
     * <dt><b>Example:</b>
     * <pre>
     *       
           *   MyFunction does this and that
           *   @param Arg1
           *      The first argument of MyFunction.
           *   @return
           *      Error code of function.
           * 
     * virtual int MyFunction (int Arg1) = 0;
     * </pre>
     * </dl>
     */

  // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------
};

//------------------------------------------------------------------
CATDeclareHandler(DumITempLine,CATBaseUnknown);
#endif
