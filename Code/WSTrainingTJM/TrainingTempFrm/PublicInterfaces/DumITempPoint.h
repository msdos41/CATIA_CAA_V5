// COPYRIGHT Dassault Systemes 2012
//===================================================================
//
// DumITempPoint.h
// Define the DumITempPoint interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Dec 2012  Creation: Code generated by the CAA wizard  Administrator
//===================================================================
#ifndef DumITempPoint_H
#define DumITempPoint_H

#include "TrainingTempM.h"
#include "CATBaseUnknown.h"

#include "CATMathPoint.h"
#include "CATMathPlane.h"
#include "CATRep.h"


#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByTrainingTempM IID IID_DumITempPoint;
#else
extern "C" const IID IID_DumITempPoint ;
#endif

//extern ExportedByTrainingTempM  IID IID_DumITempPoint ;

//class CATListPtrDumITempPoint;
//class CATListPtrDumITempPoint_var;

//------------------------------------------------------------------

/**
* Interface representing xxx.
*
* <br><b>Role</b>: Components that implement
* DumITempPoint are ...
* <p>
* Do not use the DumITempPoint interface for such and such

*
* @example
*  // example is optional
*  DumITempPoint* currentDisplay = NULL;
*  rc = window-&gt;QueryInterface(IID_DumITempPoint,
*                                     (void**) &amp;currentDisplay);
*
* @href ClassReference, Class#MethodReference, #InternalMethod...
*/
class ExportedByTrainingTempM DumITempPoint: public CATBaseUnknown
{
  CATDeclareInterface;

  public:
	  virtual HRESULT SetDatas(CATMathPoint *iOrigin,CATMathPlane * iPlane) = 0;
	  virtual HRESULT SetDatas(CATMathPoint *iOrigin) = 0;
	  virtual HRESULT SetGraphicRepresentation (CATRep *  iRep ) = 0;
	  virtual HRESULT GetGraphicRepresentation (CATRep **  oRep) = 0;
	  virtual HRESULT GetPosition(CATMathPoint * oOrigin,CATMathPlane * oPlane ) = 0;

    /**
     * Remember that interfaces define only virtual pure methods.
     * Dont forget to document your methods.
     * <dl>
     * <dt><b>Example:</b>
     * <pre>
     *       
           *   MyFunction does this and that
           *   @param Arg1
           *      The first argument of MyFunction.
           *   @return
           *      Error code of function.
           * 
     * virtual int MyFunction (int Arg1) = 0;
     * </pre>
     * </dl>
     */

  // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------
};
CATDeclareHandler(DumITempPoint,CATBaseUnknown);

#undef CATCOLLEC_ExportedBy
#define CATCOLLEC_ExportedBy ExportedByTrainingTempM

//ListPtr
#include "CATLISTP_Clean.h"
#include "CATLISTP_AllFunct.h"
#include "CATLISTP_Declare.h"

CATLISTP_DECLARE(DumITempPoint)

#include "CATLISTHand_Clean.h"
#include "CATLISTHand_AllFunct.h"
#include "CATLISTHand_Declare.h"

CATLISTHand_DECLARE(DumITempPoint_var)

//#undef	CATCOLLEC_ExportedBy
//------------------------------------------------------------------

#endif
