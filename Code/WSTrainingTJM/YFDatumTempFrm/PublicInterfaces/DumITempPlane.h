// COPYRIGHT Dassault Systemes 2013
//===================================================================
//
// DumITempPlane.h
// Define the DumITempPlane interface
//
//===================================================================
//
// Usage notes:
//   New interface: describe its use here
//
//===================================================================
//
//  Aug 2013  Creation: Code generated by the CAA wizard  
//===================================================================
#ifndef DumITempPlane_H
#define DumITempPlane_H

#include "YFDatumTempM.h"
#include "CATBaseUnknown.h"
#include "CATMathPoint.h"
#include "CATMathDirection.h"
#include "CATRep.h"

#ifndef LOCAL_DEFINITION_FOR_IID
extern ExportedByYFDatumTempM IID IID_DumITempPlane;
#else
extern "C" const IID IID_DumITempPlane ;
#endif


//------------------------------------------------------------------

/**
* Interface representing xxx.
*
* <br><b>Role</b>: Components that implement
* DumITempPlane are ...
* <p>
* Do not use the DumITempPlane interface for such and such

*
* @example
*  // example is optional
*  DumITempPlane* currentDisplay = NULL;
*  rc = window-&gt;QueryInterface(IID_DumITempPlane,
*                                     (void**) &amp;currentDisplay);
*
* @href ClassReference, Class#MethodReference, #InternalMethod...
*/
class ExportedByYFDatumTempM DumITempPlane: public CATBaseUnknown
{
  CATDeclareInterface;

  public:
	  virtual HRESULT SetDatas(CATMathPoint *iOrigin,
		  CATMathDirection * iDirX, 
		  CATMathDirection * iDirY) = 0;
	  virtual HRESULT GetPosition(CATMathPoint * oOrigin, 
		  CATMathDirection * oDirX,
		  CATMathDirection * oDirY) = 0;

	  virtual HRESULT SetGraphicRepresentation (CATRep *  iRep ) = 0;
	  virtual HRESULT GetGraphicRepresentation (CATRep **  oRep ) = 0;

    /**
     * Remember that interfaces define only virtual pure methods.
     * Dont forget to document your methods.
     * <dl>
     * <dt><b>Example:</b>
     * <pre>
     *       
           *   MyFunction does this and that
           *   @param Arg1
           *      The first argument of MyFunction.
           *   @return
           *      Error code of function.
           * 
     * virtual int MyFunction (int Arg1) = 0;
     * </pre>
     * </dl>
     */

  // No constructors or destructors on this pure virtual base class
  // --------------------------------------------------------------
};

CATDeclareHandler(DumITempPlane,CATBaseUnknown);

#undef CATCOLLEC_ExportedBy
#define CATCOLLEC_ExportedBy ExportedByYFDatumTempM

//ListPtr
#include "CATLISTP_Clean.h"
#include "CATLISTP_AllFunct.h"
#include "CATLISTP_Declare.h"

CATLISTP_DECLARE(DumITempPlane)

#include "CATLISTHand_Clean.h"
#include "CATLISTHand_AllFunct.h"
#include "CATLISTHand_Declare.h"

CATLISTHand_DECLARE(DumITempPlane_var)

#undef	CATCOLLEC_ExportedBy
//------------------------------------------------------------------

#endif
