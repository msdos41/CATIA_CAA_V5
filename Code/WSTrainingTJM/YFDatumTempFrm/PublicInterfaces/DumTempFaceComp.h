// COPYRIGHT Dassault Systemes 2015
//===================================================================
//
// DumTempFaceComp.h
// Provide implementation to interface
//    PipITempFace

//
//===================================================================
//
// Usage notes:
//
//===================================================================
//CAA2 Wizard Generation Report
//IMPLEMENTATION
//    TIE: PipITempFace

//End CAA2 Wizard Generation Report
//
//  Jul 2015  Creation: Code generated by the CAA wizard  likj
//===================================================================
#ifndef DumTempFaceComp_H
#define DumTempFaceComp_H

#include "YFDatumTempM.h"
#include "CATBaseUnknown.h"
#include "CATBoolean.h"
#include "CATLISTV_CATMathPoint.h"
#include "CATModelForRep3D.h"
#include "CATMathVector.h"

//-----------------------------------------------------------------------

/**
* Class representing xxx.
*
* <br><b>Role</b>: Provide the basic class function...
* <p>
* It implements the interfaces :
*  <ol>
*  <li>@href PipITempFace
*  </ol>
*
* @href ClassReference, Class#MethodReference, #InternalMethod...
*/
class ExportedByYFDatumTempM DumTempFaceComp: public CATModelForRep3D

{
  CATDeclareClass;

  public:

  // Standard constructors and destructors for an implementation class
  // -----------------------------------------------------------------
     DumTempFaceComp ();
     virtual ~DumTempFaceComp ();
	 HRESULT SetDatas(CATLISTV(CATMathPoint) lstMathVertices,CATMathVector iMathNormal,
					  int iTransparent,int iRed = 0,int iGreen = 255,int iBlue = 0);
	 HRESULT SetGraphicRepresentation (CATRep *  iRep );
	 HRESULT GetGraphicRepresentation (CATRep **  oRep );
	 HRESULT GetNormalDir(CATMathVector& ioMathNormal);
	 HRESULT GetCenterPoint(CATMathPoint& iCenterPoint);
	 HRESULT GetCornerPoints(CATLISTV(CATMathPoint) &olstCornerPoints);

  private:
  // The copy constructor and the equal operator must not be implemented
  // -------------------------------------------------------------------
  DumTempFaceComp (DumTempFaceComp &);
  DumTempFaceComp& operator=(DumTempFaceComp&);

  HRESULT Update3DFace(CATLISTV(CATMathPoint) lstMathVertices,CATMathVector iMathNormal,
					   int iTransparent,int iRed,int iGreen,int iBlue);
  
  CATMathVector _normalDir;
  CATMathPoint _mathPoint1;
  CATMathPoint _mathPoint2;

  CATLISTV(CATMathPoint) _lstCornerPoints;

};

//-----------------------------------------------------------------------

#endif
