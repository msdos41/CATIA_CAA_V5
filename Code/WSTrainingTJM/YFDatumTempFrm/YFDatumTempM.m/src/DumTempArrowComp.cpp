// COPYRIGHT Dassault Systemes 2012
//===================================================================
//
// DumTempArrowComp.cpp
// Provide implementation to interface
//    DumITempArrow
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//  Dec 2012  Creation: Code generated by the CAA wizard  Administrator
//===================================================================
#include "DumTempArrowComp.h"
#include "CATFrmEditor.h"
#include "CAT3DPointRep.h"
#include "CATGraphicAttributeSet.h"
#include "CATISO.h"
#include "CATViewer.h"

CATImplementClass(DumTempArrowComp,
				  Implementation,
				  CATModelForRep3D,
				  CATnull );


//-----------------------------------------------------------------------------
// DumTempArrowComp : constructor
//-----------------------------------------------------------------------------
DumTempArrowComp::DumTempArrowComp():
CATModelForRep3D()
{
}

//-----------------------------------------------------------------------------
// DumTempArrowComp : destructor
//-----------------------------------------------------------------------------
DumTempArrowComp::~DumTempArrowComp()
{
}

// Link the implementation to its interface
// ---------------------------------------

//TIE or TIEchain definitions
#include "TIE_DumITempArrow.h"
TIE_DumITempArrow(DumTempArrowComp);


//Methods implementation
HRESULT DumTempArrowComp::SetDatas (CATMathPoint * iOrigin,CATMathDirection * iDir)
{
	//cout<<"SetDatas"<<endl;

	HRESULT rc = S_OK;

	_mathPt = (*iOrigin);
	_mathDir = (*iDir);

	UpdateArrow();

	return rc;
}

HRESULT DumTempArrowComp::SetGraphicRepresentation(CATRep * iRep)
{
	SetRep(iRep);

	return S_OK;
}

HRESULT DumTempArrowComp::GetGraphicRepresentation(CATRep ** oRep)
{
	(*oRep) = GiveRep();

	return S_OK;
}

HRESULT DumTempArrowComp::UpdateArrow()
{
	HRESULT rc=E_FAIL;

	CAT3DBagRep* pBagRep = NULL;

	CAT3DCustomRep * pRepForCenter = new CAT3DCustomRep();

	//Get the CATISO
	CATFrmEditor *pEditor=CATFrmEditor::GetCurrentEditor();
	CATISO * pISO = pEditor->GetISO();

	//Check the old CATRep is exist ?
	CATRep *pRep  =NULL;
	rc = GetGraphicRepresentation(&pRep);
	if( !!pRep ) 
	{  //The old one is exist.
		pISO->RemoveElement(this);
	}

	//arrow
	int lenAll=20;
	int lenHead=5;
	int lenBase=5;
	CATMathPointf iOrign(_mathPt.GetX(), _mathPt.GetY(), _mathPt.GetZ());
	CATMathDirectionf iDir(_mathDir.GetX(), _mathDir.GetY(), _mathDir.GetZ());
	CAT3DFixedArrowGP * arrow = new CAT3DFixedArrowGP (iOrign, iDir, lenAll, lenHead, lenBase );

	//set color
	CATGraphicAttributeSet attGP;
	attGP.SetColor(GREEN);
	attGP.SetThickness(4);

	//add graphic primitive
	pRepForCenter->AddGP(arrow,attGP);
	CAT3DBoundingSphere BSon3DCustomRep(iOrign, 0, lenAll);
	pRepForCenter->SetBoundingElement(BSon3DCustomRep);

	if (NULL== pBagRep) 
		pBagRep = new CAT3DBagRep();

	pBagRep->AddChild(*pRepForCenter);

	SetGraphicRepresentation(pBagRep);

	//CATFrmLayout * pFrmLayout = CATFrmLayout::GetCurrentLayout();
	//CATFrmWindow* pFrmWindow = pFrmLayout->GetCurrentWindow();

	//CATViewer * pViewer = pFrmWindow->GetViewer();
	//pViewer->AddRep(pBagRep);
	//pViewer->Draw();

	pISO->AddElement(this);

	return S_OK;
}

HRESULT DumTempArrowComp::GetPosition(CATMathPoint * oOrigin,CATMathDirection * oDir )
{
	(*oOrigin) = _mathPt;
	(*oDir) = _mathDir;

	return S_OK;
}