// COPYRIGHT Dassault Systemes 2015
//===================================================================
//
// DumTempLineComp.cpp
// Provide implementation to interface
//    DumITempLine
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//  May 2015  Creation: Code generated by the CAA wizard  Administrator
//===================================================================
#include "DumTempLineComp.h"
 
#include "CATRep.h"
#include "CATISO.h"
#include "CAT3DCustomRep.h"
#include "CATMathPointf.h"
#include "CATMathDirectionf.h"
#include "CATFrmEditor.h"
#include "CAT3DLineGP.h"

CATImplementClass(DumTempLineComp,
                  Implementation,
                  CATModelForRep3D,
                  CATnull );
 

//-----------------------------------------------------------------------------
// DumTempLineComp : constructor
//-----------------------------------------------------------------------------
DumTempLineComp::DumTempLineComp():
    CATModelForRep3D()
{
	_iColor=GREEN;
}

//-----------------------------------------------------------------------------
// DumTempLineComp : destructor
//-----------------------------------------------------------------------------
DumTempLineComp::~DumTempLineComp()
{
}
 
// Link the implementation to its interface
// ---------------------------------------
HRESULT DumTempLineComp::SetColor (int iColor)
{
	HRESULT rc = S_OK;
	_iColor = iColor;

	return rc;
}


//TIE or TIEchain definitions
#include "TIE_DumITempLine.h"
TIE_DumITempLine(DumTempLineComp);


//Methods implementation
//Methods implementation
HRESULT DumTempLineComp::SetDatas(CATMathPoint * iFirstPoint, CATMathPoint * iSecondPoint, int iThickness, int iRed, int iGreen, int iBlue, int iLineType)
{
	HRESULT rc = S_OK;

	_mathPt1 = (*iFirstPoint);
	_mathPt2 = (*iSecondPoint);
	_iRed = iRed;
	_iGreen = iGreen;
	_iBlue = iBlue;
	_Thickness=iThickness;
	_LineType=iLineType;
	UpdateLine();

	return rc;
}

HRESULT DumTempLineComp::SetGraphicRepresentation(CATRep * iRep)
{
	SetRep(iRep);

	return S_OK;
}

HRESULT DumTempLineComp::GetGraphicRepresentation(CATRep ** oRep)
{
	(*oRep) = GiveRep();

	return S_OK;
}

HRESULT DumTempLineComp::UpdateLine()
{
	HRESULT rc=E_FAIL;

	CAT3DCustomRep * pRepForCenter = new CAT3DCustomRep();

	////Get the CATISO
	//CATFrmEditor *pEditor=CATFrmEditor::GetCurrentEditor();
	//CATISO * pISO = pEditor->GetISO();

	////Check the old CATRep is exist ?
	//CATRep *pRep  =NULL;
	//rc = GetGraphicRepresentation(&pRep);
	//if( !!pRep ) 
	//{  //The old one is exist.
	//	pISO->RemoveElement(this);
	//}
	
	//line
	float pointArray[6] = {_mathPt1.GetX(),_mathPt1.GetY(),_mathPt1.GetZ(),_mathPt2.GetX(),_mathPt2.GetY(),_mathPt2.GetZ()};
	CAT3DLineGP *line = new CAT3DLineGP(pointArray,2);

	////arrow
	//int lenAll=20;
	//int lenHead=5;
	//int lenBase=0;
	//CATMathPointf iOrign(_mathPt.GetX(), _mathPt.GetY(), _mathPt.GetZ());
	//CATMathDirectionf iDir(_mathDir.GetX(), _mathDir.GetY(), _mathDir.GetZ());
	////CAT3DArrowGP * arrow = new CAT3DArrowGP (iOrign, iDir, lenAll, lenHead, lenBase );
	//CAT3DFixedArrowGP *arrow = new CAT3DFixedArrowGP(iOrign, iDir, lenAll, lenHead, lenBase );

	//set color
	CATGraphicAttributeSet attGP;
	//attGP.SetColor(TRUECOLOR);
	//attGP.SetColorRGBA(_iRed, _iGreen, _iBlue, 255);

	attGP.SetColor(_iColor);

	attGP.SetThickness(_Thickness);
	attGP.SetLineType(_LineType);


	//add graphic primitive
	pRepForCenter->AddGP(line,attGP);

	SetGraphicRepresentation(pRepForCenter);

	//pISO->AddElement(this);

	return S_OK;
}
