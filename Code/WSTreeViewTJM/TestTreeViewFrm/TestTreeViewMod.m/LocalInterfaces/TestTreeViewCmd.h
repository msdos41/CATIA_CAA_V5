// COPYRIGHT Dassault Systemes 2020
//===================================================================
//
// TestTreeViewCmd.h
// The state chart based command: TestTreeViewCmd
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//CAA2 Wizard Generation Report
//   STATECOMMAND
//End CAA2 Wizard Generation Report
//
//  Apr 2020  Creation: Code generated by the CAA wizard  Administrator
//===================================================================
#ifndef TestTreeViewCmd_H
#define TestTreeViewCmd_H

#include "CATStateCommand.h"
#include "CATBoolean.h"

#include "TestTreeViewDlg.h"
#include "GeneralClass.h"

#include "CAATreeCtrl.h"

#include "CATINavigateObject.h"


class CATIndicationAgent;

//----------------------------------------------------------------------

/**
 * Describe your command here.
 * <p>
 * Using this prefered syntax will enable mkdoc to document your class.
 * <p>
 * refer to programming resources of Dialog engine framework.
 * (consult base class description).
 */
class TestTreeViewCmd: public CATStateCommand
{
  // Allows customization/internationalization of command's messages
  // ---------------------------------------------------------------
  DeclareResource( TestTreeViewCmd, CATStateCommand )

  public:

  TestTreeViewCmd();
  virtual ~TestTreeViewCmd();

    /**
     * Defines the command automata.
     * <br>
     * <i>(states, transitions and agents)</i>
     */
  virtual void     BuildGraph();

    /**
     * Action associated to state transitions.
     */
  virtual CATBoolean  ActionOne(void * data);
  CATBoolean ExitCmd(void * data);
  CATBoolean ActionOK(void * data);
 // HRESULT InitTreeView(CATIProduct_var ispiProd);
  HRESULT InitTreeView();
  void InsertItemOnTree(CATIProduct_var spiProd, HTREEITEM ihNodeFather);
  void InsertPartItemOnTree(CATISpecObject_var ispiSpecObj, HTREEITEM ihNode);
  void ONtreeDBLClick(CATCallbackEvent iDestructCmdEvent, void * iDestructCmd, CATNotification * iDestructCmdNotification, CATSubscriberData iCLCmdData, CATCallback iCallbackId);
  void ONtreeLClick(CATCallbackEvent iDestructCmdEvent, void * iDestructCmd, CATNotification * iDestructCmdNotification, CATSubscriberData iCLCmdData, CATCallback iCallbackId);
  CATISpecObject_var GetSpecObjFromNode(CATISpecObject_var ispiSpecFather,CATListOfCATUnicodeString ilstNode);
private:

	  TestTreeViewDlg		*_pDlg;

	  CAATreeCtrl			m_testTree;

};

//----------------------------------------------------------------------

#endif
