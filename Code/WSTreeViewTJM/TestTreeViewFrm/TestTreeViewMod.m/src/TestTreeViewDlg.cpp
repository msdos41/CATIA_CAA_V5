// COPYRIGHT Dassault Systemes 2020
//===================================================================
//
// TestTreeViewDlg.cpp
// The dialog : TestTreeViewDlg
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Apr 2020  Creation: Code generated by the CAA wizard  Administrator
//===================================================================
#include "TestTreeViewDlg.h"
#include "CATApplicationFrame.h"
#include "CATDlgGridConstraints.h"
#include "CATMsgCatalog.h"
#ifdef TestTreeViewDlg_ParameterEditorInclude
#include "CATIParameterEditorFactory.h"
#include "CATIParameterEditor.h"
#include "CATICkeParm.h"
#endif

#define  TreeControlID 0x0201


//-------------------------------------------------------------------------
// Constructor
//-------------------------------------------------------------------------
TestTreeViewDlg::TestTreeViewDlg() :
  CATDlgDialog ((CATApplicationFrame::GetApplicationFrame())->GetMainWindow(),
//CAA2 WIZARD CONSTRUCTOR DECLARATION SECTION
"TestTreeViewDlg",CATDlgWndBtnOKCancel|CATDlgGridLayout|CATDlgWndNoResize
//END CAA2 WIZARD CONSTRUCTOR DECLARATION SECTION
                               )
{
//CAA2 WIZARD CONSTRUCTOR INITIALIZATION SECTION
 _Frame001 = NULL;
//END CAA2 WIZARD CONSTRUCTOR INITIALIZATION SECTION
}

//-------------------------------------------------------------------------
// Destructor
//-------------------------------------------------------------------------
TestTreeViewDlg::~TestTreeViewDlg()
{
//  Do not delete the control elements of your dialog: 
//     this is done automatically
//  --------------------------------------------------
//CAA2 WIZARD DESTRUCTOR DECLARATION SECTION
 _Frame001 = NULL;
//END CAA2 WIZARD DESTRUCTOR DECLARATION SECTION
}



void TestTreeViewDlg::Build()
{
//  TODO: This call builds your dialog from the layout declaration file
//  -------------------------------------------------------------------

//CAA2 WIZARD WIDGET CONSTRUCTION SECTION
 _Frame001 = new CATDlgFrame(this, "Frame001", CATDlgGridLayout);
_Frame001 -> SetGridConstraints(0, 0, 1, 1, CATGRID_4SIDES);
//END CAA2 WIZARD WIDGET CONSTRUCTION SECTION

//CAA2 WIZARD CALLBACK DECLARATION SECTION
//END CAA2 WIZARD CALLBACK DECLARATION SECTION
	//InitTreeView();
}

CATDlgFrame *TestTreeViewDlg::GetDlgFrame()
{
	return _Frame001;
}

HRESULT TestTreeViewDlg::InitTreeView()
{
	HRESULT rc = S_OK;

	////
	//if (ispiProd == NULL_var)
	//{
	//	return E_FAIL;
	//}
	////
	//if (IsProduct(ispiProd))
	//{

	//} 
	//else
	//{
	//}

	DRECT drct1;
	_Frame001->GetRectDimensions(&drct1);

	CATUnicodeString strTitle = this->GetTitle();

	BSTR bstrTitle;
	strTitle.ConvertToBSTR(&bstrTitle);

	HWND hwnd = FindWindow(NULL, bstrTitle);
	if(hwnd==NULL)
		return E_FAIL;

	CWnd * pCWnd;
	pCWnd= CWnd::FromHandle(hwnd);

	RECT rct1;
	rct1.left=drct1.x+10;
	rct1.top=drct1.y+10;
	rct1.right=drct1.dx;
	rct1.bottom=drct1.dy+10;

	UINT Uid1=TreeControlID;

	BOOL flag1=m_testTree.Create(WS_VISIBLE | WS_TABSTOP | WS_CHILD | WS_BORDER
		| TVS_HASBUTTONS | TVS_LINESATROOT | TVS_HASLINES| TVS_DISABLEDRAGDROP 
		| TVS_NOTOOLTIPS |TVS_SHOWSELALWAYS ,rct1,pCWnd,Uid1);
	if(flag1)
	{
		TVINSERTSTRUCT tvRootInst;
		tvRootInst.item.mask = TVIF_TEXT;
		tvRootInst.hInsertAfter = TVI_LAST;
		tvRootInst.hParent = NULL;
		tvRootInst.item.pszText =L"Root";

		HTREEITEM hNodeRoot = m_testTree.InsertItem(&tvRootInst);
		if(hNodeRoot)
		{
			for(int ii=1;ii<5;ii++)
			{
				CATUnicodeString strII;
				strII.BuildFromNum(ii);

				BSTR bstrII;
				strII.ConvertToBSTR(&bstrII);

				TVINSERTSTRUCT tvChildInst;
				tvChildInst.item.mask = TVIF_TEXT;
				tvChildInst.hInsertAfter = TVI_LAST;
				tvChildInst.hParent = hNodeRoot;
				tvChildInst.item.pszText =bstrII;

				HTREEITEM hNodeFath1 = m_testTree.InsertItem(&tvChildInst);
				for(int jj=1;jj<5;jj++)
				{
					CATUnicodeString strjj;
					strjj.BuildFromNum(jj);
					strjj = strII+"."+strjj;

					BSTR bstrJJ;
					strjj.ConvertToBSTR(&bstrJJ);

					TVINSERTSTRUCT tvInst2;
					tvInst2.item.mask = TVIF_TEXT;
					tvInst2.hInsertAfter = TVI_LAST;
					tvInst2.hParent = hNodeFath1;
					tvInst2.item.pszText =bstrJJ;

					HTREEITEM hNodeFath2 = m_testTree.InsertItem(&tvInst2);
				}
			}
		}
	}

	return rc;
}