// COPYRIGHT Dassault Systemes 2019
//===================================================================
//
// RPSaddin.h
// Provide implementation to interface
//    CATIPRDWorkshopAddin
//    CATIPrtWksAddin
//    CATIWorkbenchAddin

//
//===================================================================
//
// Usage notes:
//
//===================================================================
//CAA2 Wizard Generation Report
//IMPLEMENTATION
//    TIE: CATIPRDWorkshopAddin
//    TIE: CATIPrtWksAddin
//    TIE: CATIWorkbenchAddin

//End CAA2 Wizard Generation Report
//
//  Jan 2019  Creation: Code generated by the CAA wizard  Administrator
//===================================================================
#ifndef RPSaddin_H
#define RPSaddin_H

#include "CATBaseUnknown.h"
#include "TIE_CATIPRDWorkshopAddin.h"
#include "TIE_CATIPrtWksAddin.h"
#include "CATCreateWorkshop.h"
#include "CATCmdContainer.h"


//-----------------------------------------------------------------------

/**
* Class representing xxx.
*
* <br><b>Role</b>: Provide the basic class function...
* <p>
* It implements the interfaces :
*  <ol>
*  <li>@href CATIPRDWorkshopAddin
*  <li>@href CATIPrtWksAddin
*  <li>@href CATIWorkbenchAddin
*  </ol>
*
* @href ClassReference, Class#MethodReference, #InternalMethod...
*/
class RPSaddin: public CATBaseUnknown

{
  CATDeclareClass;

  public:

  // Standard constructors and destructors for an implementation class
  // -----------------------------------------------------------------
     RPSaddin ();
     virtual ~RPSaddin ();

     /**
     * Implements a function from an interface.
     * @href CATIWorkbenchAddin#CreateCommands
     */
     void CreateCommands () ;

     /**
     * Implements a function from an interface.
     * @href CATIWorkbenchAddin#CreateToolbars
     */
     CATCmdContainer * CreateToolbars () ;


  private:
  // The copy constructor and the equal operator must not be implemented
  // -------------------------------------------------------------------
  RPSaddin (RPSaddin &);
  RPSaddin& operator=(RPSaddin&);

};

//-----------------------------------------------------------------------

#endif
